2021-12-05 02:53:45,446 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 02:53:45,508 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 02:53:45,516 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 02:53:45,535 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 02:53:45,773 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 02:53:45,775 - INFO : [main] (Environment.java:213) - HHH000206: hibernate.properties not found
2021-12-05 02:53:45,824 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 02:53:46,244 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 02:53:46,244 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 02:53:46,245 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 02:53:46,288 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 02:53:46,288 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 02:53:46,345 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 02:53:46,369 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 02:53:46,438 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 02:53:46,438 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 02:53:46,445 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 02:53:46,447 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eafc191
2021-12-05 02:53:46,450 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@491cc5c9
2021-12-05 02:53:46,452 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462d5aee
2021-12-05 02:53:46,456 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 02:53:46,458 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 02:53:46,459 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 02:53:46,463 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 02:53:46,464 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 02:53:46,465 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 02:53:46,468 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 02:53:46,469 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 02:53:46,469 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 02:53:46,472 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 02:53:46,472 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@8e24743
2021-12-05 02:53:46,473 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 02:53:46,479 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 02:53:46,479 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 02:53:46,479 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 02:53:46,484 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 02:53:46,484 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 02:53:46,485 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 02:53:46,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 02:53:46,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 02:53:46,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 02:53:46,493 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 02:53:46,493 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 02:53:46,496 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 02:53:46,496 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 02:53:46,500 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1786f9d5
2021-12-05 02:53:46,501 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1786f9d5
2021-12-05 02:53:46,502 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3578436e
2021-12-05 02:53:46,504 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47db50c5
2021-12-05 02:53:46,507 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@710726a3
2021-12-05 02:53:46,508 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@710726a3
2021-12-05 02:53:46,511 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 02:53:46,511 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 02:53:46,538 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 02:53:46,538 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 02:53:46,541 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 02:53:46,541 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 02:53:46,545 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 02:53:46,545 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 02:53:46,548 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 02:53:46,549 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 02:53:46,552 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 02:53:46,552 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 02:53:46,555 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 02:53:46,555 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 02:53:46,563 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 02:53:46,564 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 02:53:46,566 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 02:53:46,566 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 02:53:46,568 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 02:53:46,568 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 02:53:46,570 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 02:53:46,570 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 02:53:46,570 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 02:53:46,572 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3439f68d
2021-12-05 02:53:46,575 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 02:53:46,575 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 02:53:46,575 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 02:53:46,576 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d8314f0
2021-12-05 02:53:46,578 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 02:53:46,578 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 02:53:46,580 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 02:53:46,580 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 02:53:46,581 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 02:53:46,581 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 02:53:46,584 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 02:53:46,585 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 02:53:46,587 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 02:53:46,587 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 02:53:46,588 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2021-12-05 02:53:46,590 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 02:53:46,591 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 02:53:46,591 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 02:53:46,593 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 02:53:46,594 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 02:53:46,594 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 02:53:46,596 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@33cb5951
2021-12-05 02:53:46,597 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7fad8c79
2021-12-05 02:53:46,599 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 02:53:46,599 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 02:53:46,599 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 02:53:46,601 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 02:53:46,602 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 02:53:46,602 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 02:53:46,604 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4ba2ca36
2021-12-05 02:53:46,605 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@25359ed8
2021-12-05 02:53:46,616 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 02:53:46,616 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 02:53:46,617 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e9e725a
2021-12-05 02:53:46,631 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 02:53:46,631 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 02:53:46,638 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 02:53:46,639 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 02:53:46,640 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b68b9a4
2021-12-05 02:53:46,643 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@491666ad
2021-12-05 02:53:46,648 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@18a70f16
2021-12-05 02:53:46,655 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 02:53:46,656 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 02:53:46,659 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2021-12-05 02:53:46,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 02:53:46,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 02:53:46,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 02:53:46,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 02:53:46,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 02:53:46,661 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 02:53:46,661 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 02:53:46,689 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 02:53:46,695 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 02:53:46,696 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 02:53:46,696 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 02:53:46,702 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 02:53:46,702 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 02:53:47,607 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 02:53:47,608 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 02:53:47,608 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 02:53:47,621 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 02:53:47,662 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 02:53:47,665 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 02:53:47,676 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 02:53:47,990 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 02:53:47,990 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 02:53:47,992 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 02:53:47,992 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 02:53:47,992 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 02:53:47,993 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 02:53:47,994 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 02:53:47,995 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 02:53:47,998 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 02:53:47,999 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 02:53:48,000 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 02:53:48,000 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 02:53:48,000 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 02:53:48,002 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 02:53:48,002 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 02:53:48,002 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 02:53:48,051 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 02:53:48,084 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 02:53:48,106 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 02:53:48,112 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 02:53:48,115 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 02:53:48,150 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 02:53:48,154 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 02:53:48,156 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 02:53:48,157 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 02:53:48,160 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 02:53:48,165 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 02:53:48,165 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 02:53:48,165 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 02:53:48,165 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 02:53:48,165 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 02:53:48,166 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 02:53:48,166 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 02:53:48,166 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 02:53:48,167 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 02:53:48,167 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 02:53:48,168 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 02:53:48,169 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 02:53:48,169 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 02:53:48,170 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 02:53:48,210 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 02:53:48,211 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 02:53:48,212 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 02:53:48,213 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 02:53:48,213 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 02:53:48,213 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 02:53:48,213 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 02:53:48,213 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 02:53:48,213 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 02:53:48,214 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@302c971f
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 02:53:48,215 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 02:53:48,216 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 02:53:48,216 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 02:53:48,280 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 02:53:48,280 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18ece7f4, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-12-05 02:53:48,292 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 02:53:48,298 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 02:53:48,351 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 02:53:48,351 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 02:53:48,380 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 02:53:48,380 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 02:53:48,513 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 02:53:48,513 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 02:53:48,513 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 02:53:48,513 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 02:53:48,513 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 02:53:48,514 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 02:53:48,514 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 02:53:48,550 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38aa816f]
2021-12-05 02:53:48,552 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,552 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,552 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,572 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,577 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,580 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:53:48,580 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53de625d]
2021-12-05 02:53:48,581 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,581 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,581 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,581 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,581 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,582 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:53:48,582 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fd0d10]
2021-12-05 02:53:48,582 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,583 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,583 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,583 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,585 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,585 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:53:48,585 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
2021-12-05 02:53:48,586 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,586 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,586 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,586 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,587 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,587 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:53:48,587 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
2021-12-05 02:53:48,588 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,588 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,588 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,588 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,589 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,589 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:53:48,589 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
2021-12-05 02:53:48,590 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,590 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,590 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,590 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,591 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,591 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:53:48,591 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
2021-12-05 02:53:48,592 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,592 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,592 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,593 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,593 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,594 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 02:53:48,594 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
2021-12-05 02:53:48,594 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,594 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,594 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,594 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,595 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,595 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:53:48,595 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6155d082]
2021-12-05 02:53:48,595 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,595 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,595 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,596 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,596 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,596 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:53:48,597 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 02:53:48,597 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,597 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,597 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,597 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,598 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,598 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:53:48,598 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 02:53:48,599 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:53:48,599 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:53:48,599 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:53:48,602 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:53:48,603 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:53:48,603 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:53:48,624 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:53:48,625 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:53:48,658 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 02:53:48,666 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 02:53:48,667 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 02:53:48,670 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55dfcc6
2021-12-05 02:53:48,672 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1464b12c-a127-4731-9b8c-bb6afc54addc (<unnamed>)
2021-12-05 02:53:48,672 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 02:53:48,749 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 02:53:48,819 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 02:53:48,820 - INFO : [main] (ProductDAOImpl.java:23) - saving traitment start ...!
2021-12-05 02:53:48,837 - DEBUG : [main] (ActionQueue.java:279) - Executing identity-insert immediately
2021-12-05 02:53:48,841 - DEBUG : [main] (SqlStatementLogger.java:92) - insert into product (name, price) values (?, ?)
2021-12-05 02:53:49,206 - DEBUG : [main] (IdentifierGeneratorHelper.java:78) - Natively generated identity: 6
2021-12-05 02:53:49,206 - DEBUG : [main] (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
2021-12-05 02:53:49,208 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 02:53:49,209 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 02:53:49,210 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 02:53:49,212 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-12-05 02:53:49,212 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 02:53:49,213 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 02:53:49,213 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=10.2, name=Product01, id=6}
2021-12-05 02:53:49,385 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 02:53:49,385 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 02:53:49,386 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 02:53:49,387 - INFO : [main] (ProductDAOImpl.java:28) - saving traitment start ...!
2021-12-05 02:54:17,613 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 02:59:13,391 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 02:59:13,414 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 02:59:13,420 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 02:59:13,436 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 02:59:13,676 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 02:59:13,679 - INFO : [main] (Environment.java:213) - HHH000206: hibernate.properties not found
2021-12-05 02:59:13,730 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 02:59:14,122 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 02:59:14,122 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 02:59:14,123 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 02:59:14,153 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 02:59:14,154 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 02:59:14,186 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 02:59:14,216 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 02:59:14,274 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 02:59:14,274 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 02:59:14,276 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 02:59:14,278 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eafc191
2021-12-05 02:59:14,281 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@491cc5c9
2021-12-05 02:59:14,282 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462d5aee
2021-12-05 02:59:14,285 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 02:59:14,285 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 02:59:14,286 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 02:59:14,288 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 02:59:14,288 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 02:59:14,289 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 02:59:14,292 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 02:59:14,292 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 02:59:14,292 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 02:59:14,295 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 02:59:14,295 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@8e24743
2021-12-05 02:59:14,295 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 02:59:14,299 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 02:59:14,299 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 02:59:14,299 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 02:59:14,301 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 02:59:14,301 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 02:59:14,303 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 02:59:14,305 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 02:59:14,305 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 02:59:14,306 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 02:59:14,311 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 02:59:14,311 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 02:59:14,313 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 02:59:14,314 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 02:59:14,316 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1786f9d5
2021-12-05 02:59:14,316 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1786f9d5
2021-12-05 02:59:14,318 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3578436e
2021-12-05 02:59:14,319 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47db50c5
2021-12-05 02:59:14,321 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@710726a3
2021-12-05 02:59:14,321 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@710726a3
2021-12-05 02:59:14,324 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 02:59:14,324 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 02:59:14,346 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 02:59:14,346 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 02:59:14,349 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 02:59:14,349 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 02:59:14,352 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 02:59:14,353 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 02:59:14,356 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 02:59:14,356 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 02:59:14,361 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 02:59:14,362 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 02:59:14,364 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 02:59:14,365 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 02:59:14,370 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 02:59:14,370 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 02:59:14,372 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 02:59:14,373 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 02:59:14,377 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 02:59:14,377 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 02:59:14,380 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 02:59:14,380 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 02:59:14,380 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 02:59:14,383 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3439f68d
2021-12-05 02:59:14,385 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 02:59:14,386 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 02:59:14,386 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 02:59:14,387 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d8314f0
2021-12-05 02:59:14,389 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 02:59:14,390 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 02:59:14,394 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 02:59:14,394 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 02:59:14,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 02:59:14,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 02:59:14,399 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 02:59:14,400 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 02:59:14,402 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 02:59:14,402 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 02:59:14,403 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2021-12-05 02:59:14,404 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 02:59:14,405 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 02:59:14,405 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 02:59:14,407 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 02:59:14,407 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 02:59:14,408 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 02:59:14,411 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@33cb5951
2021-12-05 02:59:14,413 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7fad8c79
2021-12-05 02:59:14,414 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 02:59:14,415 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 02:59:14,415 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 02:59:14,417 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 02:59:14,417 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 02:59:14,418 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 02:59:14,419 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4ba2ca36
2021-12-05 02:59:14,421 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@25359ed8
2021-12-05 02:59:14,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 02:59:14,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 02:59:14,432 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e9e725a
2021-12-05 02:59:14,441 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 02:59:14,441 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 02:59:14,446 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 02:59:14,447 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 02:59:14,448 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b68b9a4
2021-12-05 02:59:14,448 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@491666ad
2021-12-05 02:59:14,451 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@18a70f16
2021-12-05 02:59:14,456 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 02:59:14,456 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 02:59:14,460 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2021-12-05 02:59:14,460 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 02:59:14,461 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 02:59:14,461 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 02:59:14,461 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 02:59:14,461 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 02:59:14,461 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 02:59:14,462 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 02:59:14,486 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 02:59:14,493 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 02:59:14,494 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 02:59:14,494 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 02:59:14,501 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 02:59:14,501 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 02:59:15,076 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 02:59:15,076 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 02:59:15,076 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 02:59:15,091 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 02:59:15,128 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 02:59:15,130 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 02:59:15,143 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 02:59:15,446 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 02:59:15,447 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 02:59:15,448 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 02:59:15,448 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 02:59:15,448 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 02:59:15,450 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 02:59:15,450 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 02:59:15,452 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 02:59:15,453 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 02:59:15,453 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 02:59:15,454 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 02:59:15,455 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 02:59:15,456 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 02:59:15,460 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 02:59:15,460 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 02:59:15,461 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 02:59:15,508 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 02:59:15,540 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 02:59:15,563 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 02:59:15,570 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 02:59:15,574 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 02:59:15,606 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 02:59:15,610 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 02:59:15,613 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 02:59:15,614 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 02:59:15,617 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 02:59:15,622 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 02:59:15,622 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 02:59:15,622 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 02:59:15,622 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 02:59:15,623 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 02:59:15,623 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 02:59:15,624 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 02:59:15,624 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 02:59:15,624 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 02:59:15,624 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 02:59:15,626 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 02:59:15,626 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 02:59:15,626 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 02:59:15,628 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 02:59:15,670 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 02:59:15,671 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 02:59:15,671 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 02:59:15,671 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 02:59:15,672 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 02:59:15,673 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 02:59:15,673 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 02:59:15,673 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 02:59:15,673 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 02:59:15,673 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 02:59:15,673 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@302c971f
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 02:59:15,674 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 02:59:15,675 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 02:59:15,745 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 02:59:15,745 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18ece7f4, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-12-05 02:59:15,757 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 02:59:15,763 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 02:59:15,821 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 02:59:15,821 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 02:59:15,891 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 02:59:15,892 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 02:59:15,983 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 02:59:15,984 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 02:59:15,984 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 02:59:15,984 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 02:59:15,984 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 02:59:15,984 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 02:59:15,985 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 02:59:16,022 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38aa816f]
2021-12-05 02:59:16,025 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,025 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,025 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,041 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,047 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,050 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,051 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53de625d]
2021-12-05 02:59:16,051 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,051 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,052 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,052 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,053 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,053 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,053 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fd0d10]
2021-12-05 02:59:16,054 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,054 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,054 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,054 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,055 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,055 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:59:16,056 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
2021-12-05 02:59:16,056 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,056 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,057 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,057 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,058 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,058 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:59:16,058 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
2021-12-05 02:59:16,059 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,059 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,060 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,061 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,061 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,061 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:59:16,062 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
2021-12-05 02:59:16,062 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,062 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,062 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,062 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,063 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,063 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:59:16,064 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
2021-12-05 02:59:16,064 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,064 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,065 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,065 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,066 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,066 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 02:59:16,066 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
2021-12-05 02:59:16,067 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,067 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,067 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,067 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,068 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,068 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:59:16,068 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6155d082]
2021-12-05 02:59:16,068 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,068 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,069 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,069 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,069 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,070 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 02:59:16,070 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 02:59:16,070 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,070 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,070 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,071 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,071 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,071 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,071 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 02:59:16,072 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 02:59:16,072 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 02:59:16,072 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 02:59:16,072 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 02:59:16,073 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 02:59:16,073 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,101 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,101 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,129 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 02:59:16,134 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 02:59:16,134 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 02:59:16,136 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55dfcc6
2021-12-05 02:59:16,138 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 5da3bcff-4547-492c-a6c9-826766d3da1f (<unnamed>)
2021-12-05 02:59:16,138 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 02:59:16,215 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 02:59:16,285 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 02:59:16,286 - INFO : [main] (ProductDAOImpl.java:44) - get One traitment start ...!
2021-12-05 02:59:16,297 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 02:59:16,355 - DEBUG : [main] (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
2021-12-05 02:59:16,355 - DEBUG : [main] (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : com.app.models.Product#3
2021-12-05 02:59:16,355 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 02:59:16,356 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 02:59:16,357 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 02:59:16,357 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 02:59:16,359 - INFO : [main] (ProductDAOImpl.java:50) - get One successfully ...!
2021-12-05 02:59:45,078 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:07:41,054 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:07:41,085 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:07:41,095 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:07:41,114 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:07:41,366 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:07:41,368 - INFO : [main] (Environment.java:213) - HHH000206: hibernate.properties not found
2021-12-05 03:07:41,400 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:07:41,663 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:07:41,663 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:07:41,664 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:07:41,687 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:07:41,687 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:07:41,712 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:07:41,724 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:07:41,756 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:07:41,756 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:07:41,757 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:07:41,759 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eafc191
2021-12-05 03:07:41,760 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@491cc5c9
2021-12-05 03:07:41,761 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462d5aee
2021-12-05 03:07:41,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:07:41,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:07:41,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:07:41,764 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:07:41,765 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:07:41,765 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:07:41,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:07:41,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:07:41,768 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:07:41,770 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:07:41,770 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:07:41,770 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:07:41,772 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:07:41,772 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:07:41,772 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:07:41,774 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:07:41,775 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:07:41,775 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:07:41,777 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:07:41,777 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:07:41,777 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:07:41,779 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 03:07:41,779 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 03:07:41,781 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 03:07:41,782 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 03:07:41,783 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1786f9d5
2021-12-05 03:07:41,783 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1786f9d5
2021-12-05 03:07:41,784 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3578436e
2021-12-05 03:07:41,785 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47db50c5
2021-12-05 03:07:41,786 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@710726a3
2021-12-05 03:07:41,786 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@710726a3
2021-12-05 03:07:41,787 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 03:07:41,787 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 03:07:41,803 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 03:07:41,804 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 03:07:41,805 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 03:07:41,805 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 03:07:41,807 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 03:07:41,807 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 03:07:41,809 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 03:07:41,810 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 03:07:41,811 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 03:07:41,811 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 03:07:41,813 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 03:07:41,813 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 03:07:41,818 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 03:07:41,818 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 03:07:41,820 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 03:07:41,820 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 03:07:41,821 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 03:07:41,821 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 03:07:41,823 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:07:41,823 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:07:41,823 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:07:41,825 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3439f68d
2021-12-05 03:07:41,826 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:07:41,826 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:07:41,826 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:07:41,827 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d8314f0
2021-12-05 03:07:41,828 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 03:07:41,828 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 03:07:41,830 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 03:07:41,830 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 03:07:41,831 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 03:07:41,832 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 03:07:41,833 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 03:07:41,834 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 03:07:41,835 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 03:07:41,835 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 03:07:41,836 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2021-12-05 03:07:41,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:07:41,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:07:41,838 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:07:41,840 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:07:41,840 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:07:41,840 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:07:41,842 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@33cb5951
2021-12-05 03:07:41,842 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7fad8c79
2021-12-05 03:07:41,843 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:07:41,844 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:07:41,844 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:07:41,845 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:07:41,845 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:07:41,845 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:07:41,846 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4ba2ca36
2021-12-05 03:07:41,847 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@25359ed8
2021-12-05 03:07:41,852 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 03:07:41,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 03:07:41,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e9e725a
2021-12-05 03:07:41,859 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 03:07:41,860 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 03:07:41,866 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 03:07:41,867 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 03:07:41,867 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b68b9a4
2021-12-05 03:07:41,868 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@491666ad
2021-12-05 03:07:41,870 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@18a70f16
2021-12-05 03:07:41,875 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 03:07:41,875 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:07:41,876 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:07:41,890 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:07:41,896 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:07:41,897 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:07:41,897 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:07:41,901 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:07:41,901 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:07:42,507 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:07:42,507 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:07:42,507 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:07:42,532 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:07:42,586 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:07:42,590 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:07:42,605 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:07:42,900 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:07:42,901 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:07:42,902 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:07:42,902 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:07:42,902 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:07:42,903 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:07:42,904 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:07:42,905 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:07:42,906 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:07:42,907 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:07:42,908 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:07:42,909 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:07:42,909 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:07:42,910 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:07:42,910 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:07:42,911 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:07:42,956 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:07:42,985 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:07:43,010 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:07:43,016 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:07:43,019 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:07:43,064 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:07:43,070 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:07:43,073 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:07:43,076 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:07:43,079 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:07:43,086 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:07:43,086 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:07:43,086 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:07:43,087 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:07:43,087 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:07:43,088 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:07:43,088 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:07:43,088 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:07:43,088 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:07:43,089 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:07:43,091 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:07:43,091 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:07:43,092 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:07:43,094 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:07:43,158 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:07:43,159 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:07:43,160 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:07:43,160 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:07:43,160 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:07:43,160 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:07:43,160 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:07:43,160 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:07:43,161 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:07:43,161 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:07:43,161 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:07:43,161 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:07:43,161 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:07:43,161 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:07:43,162 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:07:43,162 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:07:43,162 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:07:43,162 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:07:43,162 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:07:43,162 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@302c971f
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:07:43,163 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:07:43,164 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:07:43,164 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:07:43,164 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:07:43,164 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:07:43,164 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:07:43,164 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:07:43,165 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:07:43,165 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:07:43,165 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:07:43,240 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:07:43,240 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18ece7f4, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-12-05 03:07:43,251 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:07:43,258 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:07:43,343 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:07:43,343 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:07:43,431 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:07:43,431 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:07:43,561 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:07:43,562 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:07:43,565 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:07:43,567 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:07:43,567 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:07:43,568 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:07:43,568 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:07:43,629 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38aa816f]
2021-12-05 03:07:43,631 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,632 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,632 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,662 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,670 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,678 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:07:43,678 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53de625d]
2021-12-05 03:07:43,679 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,679 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,679 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,679 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,680 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,680 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:07:43,680 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fd0d10]
2021-12-05 03:07:43,681 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,681 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,681 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,681 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,682 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,682 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:07:43,682 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
2021-12-05 03:07:43,683 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,683 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,683 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,683 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,684 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,684 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:07:43,685 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
2021-12-05 03:07:43,685 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,685 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,685 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,686 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,687 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,688 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:07:43,688 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
2021-12-05 03:07:43,688 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,688 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,689 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,689 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,689 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,690 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:07:43,690 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
2021-12-05 03:07:43,691 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,691 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,692 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,692 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,693 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,693 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:07:43,693 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
2021-12-05 03:07:43,694 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,694 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,694 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,694 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,695 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,695 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:07:43,695 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6155d082]
2021-12-05 03:07:43,695 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,696 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,696 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,696 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,697 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,697 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:07:43,697 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:07:43,697 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,698 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,698 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,698 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,699 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,700 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:07:43,703 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:07:43,705 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:07:43,705 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:07:43,706 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:07:43,706 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:07:43,707 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:07:43,707 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:07:43,738 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:07:43,738 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:07:43,766 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:07:43,771 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:07:43,771 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:07:43,773 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55dfcc6
2021-12-05 03:07:43,775 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1926ed80-91ab-4137-97ea-324f64848608 (<unnamed>)
2021-12-05 03:07:43,775 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:07:43,908 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:07:43,991 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:07:43,992 - INFO : [main] (ProductDAOImpl.java:44) - get One traitment start ...!
2021-12-05 03:07:44,002 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:07:44,003 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:07:44,003 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:07:44,004 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:07:44,006 - INFO : [main] (ProductDAOImpl.java:50) - get One successfully ...!
2021-12-05 03:08:12,513 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:08:31,278 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:08:31,301 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:08:31,309 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:08:31,325 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:08:31,532 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:08:31,534 - INFO : [main] (Environment.java:213) - HHH000206: hibernate.properties not found
2021-12-05 03:08:31,574 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:08:31,800 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:08:31,800 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:08:31,800 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:08:31,820 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:08:31,820 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:08:31,845 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:08:31,857 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:08:31,892 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:08:31,892 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:08:31,894 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:08:31,895 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eafc191
2021-12-05 03:08:31,897 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@491cc5c9
2021-12-05 03:08:31,898 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462d5aee
2021-12-05 03:08:31,899 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:08:31,900 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:08:31,900 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:08:31,901 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:08:31,901 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:08:31,901 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:08:31,903 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:08:31,904 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:08:31,904 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:08:31,905 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:08:31,906 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:08:31,906 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:08:31,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:08:31,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:08:31,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:08:31,909 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:08:31,910 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:08:31,910 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:08:31,912 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:08:31,912 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:08:31,913 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:08:31,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 03:08:31,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 03:08:31,916 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 03:08:31,916 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 03:08:31,918 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1786f9d5
2021-12-05 03:08:31,918 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1786f9d5
2021-12-05 03:08:31,919 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3578436e
2021-12-05 03:08:31,920 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47db50c5
2021-12-05 03:08:31,922 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@710726a3
2021-12-05 03:08:31,923 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@710726a3
2021-12-05 03:08:31,924 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 03:08:31,925 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 03:08:31,942 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 03:08:31,942 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 03:08:31,944 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 03:08:31,944 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 03:08:31,946 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 03:08:31,946 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 03:08:31,948 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 03:08:31,948 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 03:08:31,950 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 03:08:31,950 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 03:08:31,952 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 03:08:31,953 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 03:08:31,957 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 03:08:31,957 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 03:08:31,959 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 03:08:31,959 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 03:08:31,960 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 03:08:31,960 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 03:08:31,962 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:08:31,962 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:08:31,962 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:08:31,963 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3439f68d
2021-12-05 03:08:31,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:08:31,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:08:31,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:08:31,966 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d8314f0
2021-12-05 03:08:31,968 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 03:08:31,969 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 03:08:31,971 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 03:08:31,971 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 03:08:31,973 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 03:08:31,973 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 03:08:31,976 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 03:08:31,976 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 03:08:31,979 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 03:08:31,979 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 03:08:31,980 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2021-12-05 03:08:31,981 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:08:31,981 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:08:31,981 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:08:31,984 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:08:31,984 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:08:31,984 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:08:31,986 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@33cb5951
2021-12-05 03:08:31,987 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7fad8c79
2021-12-05 03:08:31,988 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:08:31,988 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:08:31,988 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:08:31,990 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:08:31,990 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:08:31,990 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:08:31,992 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4ba2ca36
2021-12-05 03:08:31,994 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@25359ed8
2021-12-05 03:08:32,002 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 03:08:32,002 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 03:08:32,003 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e9e725a
2021-12-05 03:08:32,013 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 03:08:32,013 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 03:08:32,020 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 03:08:32,020 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 03:08:32,021 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b68b9a4
2021-12-05 03:08:32,022 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@491666ad
2021-12-05 03:08:32,024 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@18a70f16
2021-12-05 03:08:32,031 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 03:08:32,031 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 03:08:32,033 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2021-12-05 03:08:32,033 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:08:32,033 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:08:32,034 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:08:32,034 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:08:32,034 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:08:32,035 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:08:32,035 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:08:32,062 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:08:32,069 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:08:32,070 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:08:32,070 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:08:32,076 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:08:32,077 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:08:32,613 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:08:32,613 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:08:32,613 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:08:32,628 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:08:32,664 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:08:32,668 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:08:32,682 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:08:32,984 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:08:32,985 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:08:32,986 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:08:32,986 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:08:32,986 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:08:32,988 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:08:32,988 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:08:32,990 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:08:32,992 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:08:32,992 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:08:32,993 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:08:32,994 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:08:32,994 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:08:32,995 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:08:32,996 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:08:32,996 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:08:33,042 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:08:33,071 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:08:33,095 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:08:33,104 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:08:33,107 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:08:33,138 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:08:33,141 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:08:33,144 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:08:33,146 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:08:33,149 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:08:33,155 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:08:33,155 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:08:33,155 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:08:33,156 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:08:33,156 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:08:33,157 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:08:33,157 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:08:33,157 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:08:33,158 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:08:33,158 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:08:33,161 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:08:33,161 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:08:33,161 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:08:33,163 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:08:33,213 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:08:33,214 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:08:33,214 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:08:33,215 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:08:33,215 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:08:33,215 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:08:33,215 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:08:33,215 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:08:33,215 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:08:33,216 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:08:33,216 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:08:33,216 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:08:33,216 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:08:33,216 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:08:33,216 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:08:33,217 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:08:33,217 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:08:33,217 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:08:33,217 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:08:33,217 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:08:33,217 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:08:33,218 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:08:33,218 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@302c971f
2021-12-05 03:08:33,218 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:08:33,218 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:08:33,218 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:08:33,218 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:08:33,219 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:08:33,219 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:08:33,219 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:08:33,219 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:08:33,220 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:08:33,220 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:08:33,221 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:08:33,221 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:08:33,222 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:08:33,310 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:08:33,310 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18ece7f4, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-12-05 03:08:33,321 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:08:33,327 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:08:33,394 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:08:33,394 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:08:33,425 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:08:33,425 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:08:33,563 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:08:33,564 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:08:33,564 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:08:33,564 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:08:33,564 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:08:33,564 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:08:33,564 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:08:33,597 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38aa816f]
2021-12-05 03:08:33,599 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,599 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,599 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,617 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,622 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,625 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:08:33,625 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53de625d]
2021-12-05 03:08:33,625 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,625 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,625 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,626 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,626 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,626 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:08:33,627 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fd0d10]
2021-12-05 03:08:33,627 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,627 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,627 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,628 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,628 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,628 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:08:33,629 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
2021-12-05 03:08:33,629 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,629 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,629 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,630 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,630 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,630 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:08:33,631 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
2021-12-05 03:08:33,631 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,631 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,631 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,632 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,632 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,633 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:08:33,633 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
2021-12-05 03:08:33,633 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,633 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,633 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,634 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,634 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,635 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:08:33,635 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
2021-12-05 03:08:33,635 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,635 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,636 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,636 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,638 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,638 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:08:33,638 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
2021-12-05 03:08:33,638 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,638 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,639 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,639 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,639 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,639 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:08:33,639 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6155d082]
2021-12-05 03:08:33,640 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,640 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,640 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,640 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,640 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,641 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:08:33,641 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:08:33,641 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,641 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,641 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,641 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,642 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,642 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:08:33,642 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:08:33,643 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:08:33,643 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:08:33,643 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:08:33,643 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:08:33,644 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:08:33,644 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:08:33,672 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:08:33,672 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:08:33,701 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:08:33,709 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:08:33,709 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:08:33,711 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55dfcc6
2021-12-05 03:08:33,713 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 051aa80b-975d-4ebf-a058-ea32ed23757f (<unnamed>)
2021-12-05 03:08:33,713 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:08:33,792 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:08:33,863 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:08:33,865 - INFO : [main] (ProductDAOImpl.java:44) - get One traitment start ...!
2021-12-05 03:08:33,875 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:08:33,876 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:08:33,876 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:08:33,876 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:08:33,878 - INFO : [main] (ProductDAOImpl.java:50) - get One successfully ...!
2021-12-05 03:09:02,625 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:10:33,208 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:10:33,237 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:10:33,246 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:10:33,262 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:10:33,472 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:10:33,474 - INFO : [main] (Environment.java:213) - HHH000206: hibernate.properties not found
2021-12-05 03:10:33,508 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:10:33,737 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:10:33,737 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:10:33,737 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:10:33,754 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:10:33,754 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:10:33,781 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:10:33,795 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:10:33,829 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:10:33,829 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:10:33,830 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f99a05
2021-12-05 03:10:33,832 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eafc191
2021-12-05 03:10:33,833 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@491cc5c9
2021-12-05 03:10:33,834 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462d5aee
2021-12-05 03:10:33,836 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:10:33,836 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:10:33,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4671e53b
2021-12-05 03:10:33,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:10:33,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:10:33,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52f759d7
2021-12-05 03:10:33,842 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:10:33,842 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:10:33,842 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64f6106c
2021-12-05 03:10:33,843 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:10:33,844 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:10:33,844 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8e24743
2021-12-05 03:10:33,846 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:10:33,846 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:10:33,846 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@543c6f6d
2021-12-05 03:10:33,848 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:10:33,848 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:10:33,848 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@289d1c02
2021-12-05 03:10:33,850 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:10:33,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:10:33,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a74868d
2021-12-05 03:10:33,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 03:10:33,854 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64485a47
2021-12-05 03:10:33,856 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 03:10:33,856 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e3fc542
2021-12-05 03:10:33,857 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1786f9d5
2021-12-05 03:10:33,858 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1786f9d5
2021-12-05 03:10:33,859 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3578436e
2021-12-05 03:10:33,860 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47db50c5
2021-12-05 03:10:33,861 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@710726a3
2021-12-05 03:10:33,861 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@710726a3
2021-12-05 03:10:33,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 03:10:33,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@545997b1
2021-12-05 03:10:33,879 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 03:10:33,880 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5123a213
2021-12-05 03:10:33,881 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 03:10:33,881 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@281e3708
2021-12-05 03:10:33,884 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 03:10:33,884 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@543788f3
2021-12-05 03:10:33,886 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 03:10:33,886 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@768b970c
2021-12-05 03:10:33,888 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 03:10:33,889 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@134593bf
2021-12-05 03:10:33,892 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 03:10:33,893 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7dc222ae
2021-12-05 03:10:33,897 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 03:10:33,897 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17baae6e
2021-12-05 03:10:33,899 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 03:10:33,899 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f51b3e0
2021-12-05 03:10:33,901 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 03:10:33,901 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ad282e0
2021-12-05 03:10:33,902 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:10:33,902 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:10:33,902 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2473b9ce
2021-12-05 03:10:33,904 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3439f68d
2021-12-05 03:10:33,905 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:10:33,905 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:10:33,906 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@de3a06f
2021-12-05 03:10:33,907 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d8314f0
2021-12-05 03:10:33,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 03:10:33,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bd94634
2021-12-05 03:10:33,910 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 03:10:33,910 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1188e820
2021-12-05 03:10:33,911 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 03:10:33,911 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@276438c9
2021-12-05 03:10:33,913 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 03:10:33,913 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46238e3f
2021-12-05 03:10:33,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 03:10:33,916 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2021-12-05 03:10:33,916 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2021-12-05 03:10:33,918 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:10:33,918 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:10:33,918 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@290dbf45
2021-12-05 03:10:33,920 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:10:33,920 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:10:33,920 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bbaf4f0
2021-12-05 03:10:33,921 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@33cb5951
2021-12-05 03:10:33,922 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7fad8c79
2021-12-05 03:10:33,923 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:10:33,924 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:10:33,924 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@b59d31
2021-12-05 03:10:33,926 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:10:33,926 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:10:33,927 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e77a1ed
2021-12-05 03:10:33,928 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4ba2ca36
2021-12-05 03:10:33,929 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@25359ed8
2021-12-05 03:10:33,935 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 03:10:33,936 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28c4711c
2021-12-05 03:10:33,936 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e9e725a
2021-12-05 03:10:33,944 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 03:10:33,944 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61d47554
2021-12-05 03:10:33,950 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 03:10:33,951 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dd92fe2
2021-12-05 03:10:33,952 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b68b9a4
2021-12-05 03:10:33,953 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@491666ad
2021-12-05 03:10:33,955 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@18a70f16
2021-12-05 03:10:33,963 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 03:10:33,963 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a38c59b
2021-12-05 03:10:33,964 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2021-12-05 03:10:33,964 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:10:33,964 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:10:33,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:10:33,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:10:33,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:10:33,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:10:33,966 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:10:33,984 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:10:33,989 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:10:33,990 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:10:33,990 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:10:33,995 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:10:33,996 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:10:34,556 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:10:34,557 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:10:34,557 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:10:34,572 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:10:34,614 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:10:34,616 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:10:34,630 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:10:34,947 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:10:34,948 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:10:34,950 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:10:34,950 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:10:34,951 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:10:34,952 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:10:34,953 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:10:34,955 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:10:34,957 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:10:34,959 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:10:34,960 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:10:34,960 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:10:34,961 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:10:34,963 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:10:34,963 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:10:34,964 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:10:35,035 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:10:35,066 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:10:35,092 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:10:35,100 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:10:35,103 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:10:35,135 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:10:35,139 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:10:35,142 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:10:35,144 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:10:35,146 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:10:35,151 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:10:35,152 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:10:35,152 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:10:35,152 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:10:35,152 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:10:35,153 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:10:35,153 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:10:35,153 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:10:35,153 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:10:35,154 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:10:35,155 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:10:35,155 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:10:35,156 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:10:35,157 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:10:35,202 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:10:35,203 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:10:35,203 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:10:35,204 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:10:35,205 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@302c971f
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:10:35,206 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:10:35,207 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:10:35,207 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:10:35,207 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:10:35,207 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:10:35,208 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:10:35,208 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:10:35,208 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:10:35,284 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:10:35,285 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18ece7f4, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-12-05 03:10:35,297 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:10:35,304 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:10:35,369 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:10:35,370 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:10:35,450 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:10:35,451 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:10:35,566 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:10:35,566 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:10:35,566 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:10:35,566 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:10:35,567 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:10:35,567 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:10:35,567 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:10:35,605 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38aa816f]
2021-12-05 03:10:35,609 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,609 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,609 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,630 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,637 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,640 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:10:35,640 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53de625d]
2021-12-05 03:10:35,641 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,641 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,642 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,642 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,643 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,643 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:10:35,644 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fd0d10]
2021-12-05 03:10:35,644 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,644 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,645 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,645 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,648 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,648 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:10:35,648 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
2021-12-05 03:10:35,649 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,649 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,649 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,650 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,650 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,651 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:10:35,651 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
2021-12-05 03:10:35,651 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,652 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,652 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,652 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,652 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,653 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:10:35,653 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
2021-12-05 03:10:35,654 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,654 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,654 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,654 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,655 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,655 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:10:35,655 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
2021-12-05 03:10:35,656 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,656 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,656 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,656 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,657 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,659 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:10:35,659 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
2021-12-05 03:10:35,660 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,660 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,661 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,661 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,662 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,663 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:10:35,664 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6155d082]
2021-12-05 03:10:35,665 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,665 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,665 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,666 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,666 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,667 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:10:35,667 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:10:35,667 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,667 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,667 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,667 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,668 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,668 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:10:35,668 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:10:35,669 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:10:35,670 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:10:35,670 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:10:35,670 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:10:35,671 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:10:35,671 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:10:35,704 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:10:35,705 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:10:35,737 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:10:35,743 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:10:35,744 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:10:35,746 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55dfcc6
2021-12-05 03:10:35,747 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: dd8b6197-ba97-4b84-b641-a521eec2420d (<unnamed>)
2021-12-05 03:10:35,748 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:10:35,834 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:10:35,915 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:10:35,916 - INFO : [main] (ProductDAOImpl.java:44) - get One traitment start ...!
2021-12-05 03:10:35,924 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:10:35,925 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:10:35,926 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:10:35,926 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:10:35,927 - INFO : [main] (ProductDAOImpl.java:50) - get One successfully ...!
2021-12-05 03:11:04,565 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:17:42,669 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:17:42,692 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:17:42,699 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:17:42,716 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:17:42,928 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:17:42,932 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:17:42,969 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:17:43,195 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:17:43,195 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:17:43,195 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:17:43,212 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:17:43,213 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:17:43,237 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:17:43,252 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:17:43,289 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:17:43,290 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:17:43,292 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:17:43,294 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:17:43,295 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:17:43,296 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:17:43,299 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:17:43,299 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:17:43,299 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:17:43,300 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:17:43,301 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:17:43,301 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:17:43,303 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:17:43,303 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:17:43,304 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:17:43,305 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:17:43,305 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:17:43,305 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:17:43,307 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:17:43,307 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:17:43,307 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:17:43,310 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:17:43,311 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:17:43,311 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:17:43,313 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:17:43,313 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:17:43,314 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:17:43,316 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:17:43,316 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:17:43,318 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:17:43,318 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:17:43,320 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:17:43,320 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:17:43,321 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:17:43,322 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:17:43,324 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:17:43,325 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:17:43,327 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:17:43,328 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:17:43,344 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:17:43,345 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:17:43,346 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:17:43,347 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:17:43,349 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:17:43,349 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:17:43,351 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:17:43,351 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:17:43,353 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:17:43,353 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:17:43,356 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:17:43,356 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:17:43,361 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:17:43,361 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:17:43,363 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:17:43,363 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:17:43,364 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:17:43,364 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:17:43,365 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:17:43,366 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:17:43,366 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:17:43,367 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:17:43,369 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:17:43,369 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:17:43,369 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:17:43,370 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:17:43,371 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:17:43,372 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:17:43,374 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:17:43,375 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:17:43,377 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:17:43,377 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:17:43,379 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:17:43,379 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:17:43,381 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:17:43,381 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:17:43,382 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:17:43,383 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:17:43,383 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:17:43,383 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:17:43,385 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:17:43,385 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:17:43,386 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:17:43,387 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:17:43,388 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:17:43,389 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:17:43,389 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:17:43,390 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:17:43,391 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:17:43,391 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:17:43,392 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:17:43,393 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:17:43,394 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:17:43,399 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:17:43,399 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:17:43,400 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:17:43,411 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:17:43,412 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:17:43,419 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:17:43,419 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:17:43,420 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:17:43,421 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:17:43,424 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:17:43,429 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:17:43,429 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:17:43,430 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:17:43,430 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:17:43,430 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:17:43,430 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:17:43,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:17:43,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:17:43,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:17:43,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:17:43,447 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:17:43,455 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:17:43,456 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:17:43,457 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:17:43,463 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:17:43,463 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:17:43,968 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:17:43,968 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:17:43,968 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:17:43,983 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:17:44,025 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:17:44,029 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:17:44,042 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:17:44,353 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:17:44,354 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:17:44,355 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:17:44,355 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:17:44,355 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:17:44,356 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:17:44,357 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:17:44,359 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:17:44,361 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:17:44,363 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:17:44,364 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:17:44,365 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:17:44,365 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:17:44,367 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:17:44,367 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:17:44,367 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:17:44,417 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:17:44,451 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:17:44,477 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:17:44,484 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:17:44,488 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:17:44,517 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:17:44,520 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:17:44,523 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:17:44,524 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:17:44,527 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:17:44,532 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:17:44,532 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:17:44,532 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:17:44,532 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:17:44,532 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:17:44,533 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:17:44,533 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:17:44,534 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:17:44,534 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:17:44,534 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:17:44,536 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:17:44,536 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:17:44,536 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:17:44,537 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:17:44,581 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:17:44,583 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:17:44,584 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1972e513
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:17:44,585 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:17:44,586 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:17:44,586 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:17:44,586 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:17:44,586 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:17:44,586 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:17:44,586 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:17:44,657 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:17:44,657 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cce57c7, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:17:44,669 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:17:44,675 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:17:44,745 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:17:44,746 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:17:44,769 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:17:44,769 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:17:44,945 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:17:44,945 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:17:44,945 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:17:44,946 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:17:44,946 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:17:44,946 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:17:44,946 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:17:45,046 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f6fd09]
2021-12-05 03:17:45,049 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,050 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,050 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,084 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,093 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,098 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:17:45,098 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535779e4]
2021-12-05 03:17:45,098 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,098 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,099 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,099 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,100 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,101 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:17:45,102 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d9d86]
2021-12-05 03:17:45,102 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,104 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,105 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,107 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,107 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,108 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:17:45,109 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24111ef1]
2021-12-05 03:17:45,111 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,111 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,111 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,112 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,112 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,113 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:17:45,113 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde5d22]
2021-12-05 03:17:45,114 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,114 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,114 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,114 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,115 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,116 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:17:45,116 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71812481]
2021-12-05 03:17:45,116 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,117 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,117 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,118 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,119 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,120 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:17:45,123 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b94089b]
2021-12-05 03:17:45,123 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,123 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,124 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,124 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,125 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,126 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:17:45,126 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f9738]
2021-12-05 03:17:45,126 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,127 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,127 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,127 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,128 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,128 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:17:45,128 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
2021-12-05 03:17:45,128 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,129 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,129 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,129 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,130 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,130 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:17:45,130 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
2021-12-05 03:17:45,131 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,131 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,131 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,132 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,132 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,132 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:17:45,133 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
2021-12-05 03:17:45,133 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:17:45,138 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:17:45,138 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:17:45,138 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:17:45,139 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:17:45,140 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:17:45,173 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:17:45,174 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:17:45,230 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:17:45,236 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:17:45,236 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:17:45,238 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@222eb8aa
2021-12-05 03:17:45,241 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: af548483-31e0-433c-be74-aca746338ac7 (<unnamed>)
2021-12-05 03:17:45,241 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:17:45,365 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:17:45,487 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:17:45,489 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:17:45,505 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:17:45,506 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:17:45,507 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:17:45,507 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:17:45,514 - INFO : [main] (ProductDAOImpl.java:52) - get One successfully ...!
2021-12-05 03:18:13,972 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:18:26,806 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:18:26,832 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:18:26,839 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:18:26,856 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:18:27,163 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:18:27,167 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:18:27,205 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:18:27,622 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:18:27,622 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:18:27,623 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:18:27,640 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:18:27,640 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:18:27,666 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:18:27,679 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:18:27,712 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:18:27,712 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:18:27,714 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:18:27,716 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:18:27,720 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:18:27,722 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:18:27,727 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:18:27,727 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:18:27,728 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:18:27,731 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:18:27,731 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:18:27,731 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:18:27,735 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:18:27,736 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:18:27,736 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:18:27,738 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:18:27,739 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:18:27,739 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:18:27,744 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:18:27,745 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:18:27,745 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:18:27,748 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:18:27,748 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:18:27,750 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:18:27,753 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:18:27,753 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:18:27,753 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:18:27,755 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:18:27,756 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:18:27,759 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:18:27,760 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:18:27,762 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:18:27,762 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:18:27,764 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:18:27,765 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:18:27,766 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:18:27,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:18:27,768 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:18:27,769 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:18:27,789 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:18:27,789 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:18:27,791 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:18:27,792 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:18:27,795 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:18:27,795 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:18:27,798 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:18:27,798 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:18:27,800 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:18:27,801 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:18:27,803 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:18:27,804 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:18:27,812 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:18:27,812 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:18:27,815 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:18:27,815 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:18:27,817 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:18:27,818 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:18:27,820 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:18:27,820 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:18:27,820 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:18:27,824 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:18:27,829 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:18:27,829 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:18:27,829 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:18:27,831 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:18:27,833 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:18:27,833 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:18:27,835 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:18:27,835 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:18:27,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:18:27,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:18:27,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:18:27,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:18:27,844 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:18:27,844 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:18:27,846 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:18:27,848 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:18:27,848 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:18:27,848 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:18:27,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:18:27,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:18:27,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:18:27,854 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:18:27,855 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:18:27,857 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:18:27,857 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:18:27,858 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:18:27,862 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:18:27,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:18:27,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:18:27,864 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:18:27,866 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:18:27,873 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:18:27,873 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:18:27,879 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:18:27,890 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:18:27,890 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:18:27,899 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:18:27,900 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:18:27,900 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:18:27,901 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:18:27,904 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:18:27,913 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:18:27,913 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:18:27,914 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:18:27,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:18:27,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:18:27,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:18:27,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:18:27,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:18:27,915 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:18:27,916 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:18:27,944 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:18:27,950 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:18:27,950 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:18:27,951 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:18:27,955 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:18:27,955 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:18:28,627 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:18:28,627 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:18:28,627 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:18:28,645 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:18:28,699 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:18:28,702 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:18:28,718 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:18:29,040 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:18:29,040 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:18:29,042 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:18:29,042 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:18:29,043 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:18:29,044 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:18:29,045 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:18:29,046 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:18:29,047 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:18:29,048 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:18:29,049 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:18:29,049 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:18:29,050 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:18:29,051 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:18:29,051 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:18:29,051 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:18:29,099 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:18:29,133 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:18:29,159 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:18:29,166 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:18:29,169 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:18:29,201 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:18:29,204 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:18:29,207 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:18:29,209 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:18:29,211 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:18:29,216 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:18:29,216 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:18:29,216 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:18:29,216 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:18:29,217 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:18:29,217 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:18:29,217 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:18:29,217 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:18:29,218 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:18:29,218 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:18:29,219 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:18:29,220 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:18:29,220 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:18:29,221 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:18:29,262 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:18:29,264 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:18:29,265 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1972e513
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:18:29,266 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:18:29,267 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:18:29,267 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:18:29,267 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:18:29,267 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:18:29,267 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:18:29,333 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:18:29,334 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cce57c7, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:18:29,346 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:18:29,352 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:18:29,411 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:18:29,412 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:18:29,493 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:18:29,494 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:18:29,590 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:18:29,591 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:18:29,591 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:18:29,591 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:18:29,591 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:18:29,592 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:18:29,592 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:18:29,631 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f6fd09]
2021-12-05 03:18:29,632 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,633 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,633 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,653 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,660 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,663 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:18:29,664 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535779e4]
2021-12-05 03:18:29,664 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,664 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,665 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,665 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,666 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,666 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:18:29,666 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d9d86]
2021-12-05 03:18:29,667 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,667 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,667 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,667 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,668 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,668 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:18:29,669 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24111ef1]
2021-12-05 03:18:29,669 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,669 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,669 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,670 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,670 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,671 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:18:29,671 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde5d22]
2021-12-05 03:18:29,671 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,671 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,672 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,672 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,673 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,673 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:18:29,673 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71812481]
2021-12-05 03:18:29,673 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,673 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,674 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,674 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,675 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,676 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:18:29,677 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b94089b]
2021-12-05 03:18:29,677 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,677 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,677 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,678 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,678 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,678 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:18:29,679 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f9738]
2021-12-05 03:18:29,679 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,679 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,679 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,680 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,680 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,680 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:18:29,681 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
2021-12-05 03:18:29,681 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,681 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,681 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,681 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,682 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,682 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:18:29,682 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
2021-12-05 03:18:29,682 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,683 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,683 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,683 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,683 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,684 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:18:29,684 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
2021-12-05 03:18:29,684 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:18:29,684 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:18:29,684 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:18:29,685 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:18:29,685 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:18:29,686 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:18:29,712 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:18:29,712 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:18:29,744 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:18:29,750 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:18:29,750 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:18:29,752 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@222eb8aa
2021-12-05 03:18:29,754 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 95c1bc52-f219-493a-89ca-3812a69cb569 (<unnamed>)
2021-12-05 03:18:29,754 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:18:29,855 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:18:29,943 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:18:29,944 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:18:29,950 - DEBUG : [main] (TransactionImpl.java:98) - rolling back
2021-12-05 03:18:29,972 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:18:29,991 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:18:29,991 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:18:58,637 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:19:11,873 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:19:11,897 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:19:11,904 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:19:11,921 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:19:12,143 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:19:12,146 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:19:12,179 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:19:12,513 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:19:12,513 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:19:12,513 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:19:12,541 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:19:12,542 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:19:12,583 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:19:12,604 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:19:12,655 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:19:12,655 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:19:12,657 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:19:12,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:19:12,663 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:19:12,664 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:19:12,668 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:19:12,668 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:19:12,668 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:19:12,670 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:19:12,671 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:19:12,671 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:19:12,678 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:19:12,679 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:19:12,679 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:19:12,682 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:19:12,682 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:19:12,682 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:19:12,685 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:19:12,685 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:19:12,685 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:19:12,687 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:19:12,688 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:19:12,691 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:19:12,697 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:19:12,697 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:19:12,697 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:19:12,700 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:19:12,700 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:19:12,702 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:19:12,703 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:19:12,705 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:19:12,705 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:19:12,707 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:19:12,711 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:19:12,713 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:19:12,713 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:19:12,715 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:19:12,715 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:19:12,740 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:19:12,741 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:19:12,745 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:19:12,745 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:19:12,748 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:19:12,748 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:19:12,750 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:19:12,751 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:19:12,753 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:19:12,753 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:19:12,755 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:19:12,755 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:19:12,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:19:12,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:19:12,765 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:19:12,765 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:19:12,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:19:12,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:19:12,769 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:19:12,769 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:19:12,769 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:19:12,771 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:19:12,773 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:19:12,773 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:19:12,774 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:19:12,777 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:19:12,779 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:19:12,779 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:19:12,781 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:19:12,781 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:19:12,783 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:19:12,783 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:19:12,785 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:19:12,785 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:19:12,788 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:19:12,788 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:19:12,789 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:19:12,791 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:19:12,791 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:19:12,792 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:19:12,795 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:19:12,795 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:19:12,795 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:19:12,797 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:19:12,799 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:19:12,801 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:19:12,801 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:19:12,801 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:19:12,803 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:19:12,803 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:19:12,804 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:19:12,805 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:19:12,807 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:19:12,817 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:19:12,818 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:19:12,819 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:19:12,832 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:19:12,832 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:19:12,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:19:12,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:19:12,838 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:19:12,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:19:12,841 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:19:12,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:19:12,851 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:19:12,852 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:19:12,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:19:12,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:19:12,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:19:12,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:19:12,854 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:19:12,854 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:19:12,854 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:19:12,881 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:19:12,889 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:19:12,889 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:19:12,890 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:19:12,897 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:19:12,897 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:19:13,386 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:19:13,387 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:19:13,387 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:19:13,402 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:19:13,439 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:19:13,442 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:19:13,454 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:19:13,762 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:19:13,762 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:19:13,763 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:19:13,763 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:19:13,764 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:19:13,765 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:19:13,766 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:19:13,768 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:19:13,770 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:19:13,771 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:19:13,772 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:19:13,773 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:19:13,773 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:19:13,774 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:19:13,774 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:19:13,775 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:19:13,822 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:19:13,860 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:19:13,884 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:19:13,891 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:19:13,895 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:19:13,925 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:19:13,928 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:19:13,930 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:19:13,932 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:19:13,934 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:19:13,939 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:19:13,939 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:19:13,939 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:19:13,940 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:19:13,940 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:19:13,940 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:19:13,941 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:19:13,941 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:19:13,941 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:19:13,941 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:19:13,943 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:19:13,944 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:19:13,944 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:19:13,945 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:19:13,989 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:19:13,990 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:19:13,990 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:19:13,990 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:19:13,990 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:19:13,990 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:19:13,990 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:19:13,991 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:19:13,992 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:19:13,992 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:19:13,992 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:19:13,992 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:19:13,992 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:19:13,992 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1972e513
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:19:13,993 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:19:13,994 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:19:13,994 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:19:13,994 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:19:13,994 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:19:13,994 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:19:13,994 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:19:14,062 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:19:14,063 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cce57c7, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:19:14,074 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:19:14,081 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:19:14,145 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:19:14,145 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:19:14,219 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:19:14,219 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:19:14,322 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:19:14,323 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:19:14,323 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:19:14,323 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:19:14,324 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:19:14,324 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:19:14,324 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:19:14,365 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f6fd09]
2021-12-05 03:19:14,366 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,367 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,367 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,386 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,393 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,396 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,396 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535779e4]
2021-12-05 03:19:14,397 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,397 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,397 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,398 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,398 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,399 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,399 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d9d86]
2021-12-05 03:19:14,400 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,400 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,400 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,401 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,401 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,402 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:19:14,402 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24111ef1]
2021-12-05 03:19:14,402 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,403 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,403 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,403 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,404 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,404 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:19:14,404 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde5d22]
2021-12-05 03:19:14,405 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,405 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,405 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,405 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,406 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,406 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:19:14,407 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71812481]
2021-12-05 03:19:14,407 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,407 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,407 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,408 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,409 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,410 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:19:14,410 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b94089b]
2021-12-05 03:19:14,411 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,411 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,411 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,412 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,412 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,413 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:19:14,413 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f9738]
2021-12-05 03:19:14,413 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,413 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,414 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,414 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,415 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,415 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:19:14,415 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
2021-12-05 03:19:14,416 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,416 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,416 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,416 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,417 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,417 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:19:14,417 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
2021-12-05 03:19:14,417 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,418 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,418 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,418 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,418 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,419 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,419 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
2021-12-05 03:19:14,419 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:19:14,419 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:19:14,420 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:19:14,420 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:19:14,420 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:19:14,421 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,453 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,454 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,480 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:19:14,485 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:19:14,485 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:19:14,487 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@222eb8aa
2021-12-05 03:19:14,489 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: f0bef6f1-4ef0-43e7-98cf-ba5c7c0942dd (<unnamed>)
2021-12-05 03:19:14,489 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:19:14,572 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:19:14,644 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:19:14,645 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:19:14,658 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:19:14,696 - DEBUG : [main] (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
2021-12-05 03:19:14,697 - DEBUG : [main] (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-05 03:19:14,707 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:19:14,710 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:19:14,711 - DEBUG : [main] (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
2021-12-05 03:19:14,712 - DEBUG : [main] (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : com.app.models.Product#4
2021-12-05 03:19:14,712 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:19:14,713 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:19:14,716 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:19:14,719 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-12-05 03:19:14,719 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:19:14,720 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:19:14,720 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=4}
2021-12-05 03:19:14,722 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:19:14,722 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:19:14,722 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:19:14,724 - INFO : [main] (ProductDAOImpl.java:52) - get One successfully ...!
2021-12-05 03:19:43,390 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:20:48,058 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:20:48,081 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:20:48,089 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:20:48,106 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:20:48,318 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:20:48,323 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:20:48,365 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:20:48,603 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:20:48,604 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:20:48,604 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:20:48,622 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:20:48,622 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:20:48,650 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:20:48,663 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:20:48,700 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:20:48,700 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:20:48,701 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:20:48,704 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:20:48,706 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:20:48,707 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:20:48,710 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:20:48,710 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:20:48,710 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:20:48,711 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:20:48,712 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:20:48,712 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:20:48,714 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:20:48,714 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:20:48,714 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:20:48,716 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:20:48,716 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:20:48,716 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:20:48,718 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:20:48,718 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:20:48,719 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:20:48,721 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:20:48,721 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:20:48,722 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:20:48,724 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:20:48,724 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:20:48,724 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:20:48,727 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:20:48,727 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:20:48,728 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:20:48,729 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:20:48,730 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:20:48,730 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:20:48,731 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:20:48,733 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:20:48,734 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:20:48,734 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:20:48,736 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:20:48,736 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:20:48,754 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:20:48,754 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:20:48,756 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:20:48,756 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:20:48,758 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:20:48,758 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:20:48,761 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:20:48,761 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:20:48,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:20:48,763 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:20:48,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:20:48,767 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:20:48,772 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:20:48,772 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:20:48,775 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:20:48,775 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:20:48,777 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:20:48,777 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:20:48,778 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:20:48,778 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:20:48,778 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:20:48,780 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:20:48,782 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:20:48,782 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:20:48,782 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:20:48,784 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:20:48,785 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:20:48,785 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:20:48,786 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:20:48,787 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:20:48,788 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:20:48,788 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:20:48,789 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:20:48,790 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:20:48,792 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:20:48,792 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:20:48,793 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:20:48,794 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:20:48,794 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:20:48,794 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:20:48,796 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:20:48,796 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:20:48,797 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:20:48,798 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:20:48,799 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:20:48,800 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:20:48,800 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:20:48,800 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:20:48,801 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:20:48,802 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:20:48,802 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:20:48,803 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:20:48,804 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:20:48,810 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:20:48,810 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:20:48,812 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:20:48,819 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:20:48,820 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:20:48,825 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:20:48,825 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:20:48,827 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:20:48,829 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:20:48,831 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:20:48,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:20:48,837 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:20:48,838 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:20:48,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:20:48,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:20:48,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:20:48,839 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:20:48,840 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:20:48,840 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:20:48,840 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:20:48,863 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:20:48,869 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:20:48,869 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:20:48,869 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:20:48,873 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:20:48,874 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:20:49,552 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:20:49,552 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:20:49,553 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:20:49,574 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:20:49,634 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:20:49,638 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:20:49,655 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:20:50,086 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:20:50,087 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:20:50,088 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:20:50,088 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:20:50,089 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:20:50,092 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:20:50,095 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:20:50,098 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:20:50,100 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:20:50,102 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:20:50,103 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:20:50,104 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:20:50,105 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:20:50,112 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:20:50,112 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:20:50,112 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:20:50,177 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:20:50,235 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:20:50,277 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:20:50,285 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:20:50,288 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:20:50,323 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:20:50,329 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:20:50,331 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:20:50,333 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:20:50,335 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:20:50,340 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:20:50,340 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:20:50,340 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:20:50,340 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:20:50,340 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:20:50,341 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:20:50,343 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:20:50,343 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:20:50,343 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:20:50,343 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:20:50,346 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:20:50,346 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:20:50,346 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:20:50,347 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:20:50,389 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:20:50,391 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:20:50,391 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:20:50,391 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:20:50,391 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:20:50,392 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:20:50,392 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:20:50,392 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:20:50,392 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1972e513
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:20:50,393 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:20:50,394 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:20:50,395 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:20:50,395 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:20:50,468 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:20:50,468 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cce57c7, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:20:50,481 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:20:50,487 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:20:50,550 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:20:50,551 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:20:50,620 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:20:50,620 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:20:50,712 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:20:50,712 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:20:50,713 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:20:50,713 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:20:50,713 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:20:50,713 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:20:50,713 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:20:50,751 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f6fd09]
2021-12-05 03:20:50,753 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,753 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,754 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,771 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,777 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,780 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:50,780 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535779e4]
2021-12-05 03:20:50,780 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,781 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,781 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,781 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,782 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,782 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:50,782 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d9d86]
2021-12-05 03:20:50,783 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,783 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,783 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,783 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,784 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,784 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:20:50,785 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24111ef1]
2021-12-05 03:20:50,785 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,785 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,785 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,786 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,786 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,787 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:20:50,787 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde5d22]
2021-12-05 03:20:50,787 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,788 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,788 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,788 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,789 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,790 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:20:50,791 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71812481]
2021-12-05 03:20:50,791 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,791 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,791 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,792 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,793 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,793 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:20:50,793 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b94089b]
2021-12-05 03:20:50,794 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,794 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,794 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,795 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,795 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,795 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:20:50,796 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f9738]
2021-12-05 03:20:50,796 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,796 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,796 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,797 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,797 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,797 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:20:50,797 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
2021-12-05 03:20:50,798 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,798 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,798 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,798 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,798 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,798 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:20:50,799 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
2021-12-05 03:20:50,799 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,799 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,799 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,799 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,800 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,800 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:50,800 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
2021-12-05 03:20:50,800 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:20:50,800 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:20:50,800 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:20:50,801 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:20:50,801 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:20:50,802 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:50,829 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:50,829 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:50,865 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:20:50,873 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:20:50,873 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:20:50,875 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@222eb8aa
2021-12-05 03:20:50,878 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 0c9a31d9-2596-48fc-a1b0-d37ac6ce6953 (<unnamed>)
2021-12-05 03:20:50,878 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:20:51,005 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:20:51,085 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:20:51,086 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:20:51,097 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:20:51,113 - DEBUG : [main] (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
2021-12-05 03:20:51,114 - DEBUG : [main] (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-05 03:20:51,124 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:20:51,127 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:20:51,128 - DEBUG : [main] (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
2021-12-05 03:20:51,128 - DEBUG : [main] (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : com.app.models.Product#4
2021-12-05 03:20:51,129 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:20:51,129 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:20:51,132 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:20:51,134 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-12-05 03:20:51,134 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:20:51,135 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:20:51,136 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=4}
2021-12-05 03:20:51,137 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:20:51,138 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:20:51,138 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:20:51,139 - INFO : [main] (ProductDAOImpl.java:52) - get One successfully ...!
2021-12-05 03:21:11,744 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:21:11,769 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:21:11,775 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:21:11,791 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:21:12,011 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:21:12,016 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:21:12,052 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:21:12,275 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:21:12,276 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:21:12,276 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:21:12,294 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:21:12,294 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:21:12,318 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:21:12,331 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:21:12,361 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:21:12,361 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:21:12,362 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:21:12,363 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:21:12,365 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:21:12,366 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:21:12,368 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:21:12,368 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:21:12,368 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:21:12,370 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:21:12,371 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:21:12,371 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:21:12,373 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:21:12,373 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:21:12,373 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:21:12,375 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:21:12,376 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:21:12,376 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:21:12,378 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:21:12,378 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:21:12,378 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:21:12,381 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:21:12,381 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:21:12,381 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:21:12,384 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:21:12,384 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:21:12,384 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:21:12,387 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:21:12,387 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:21:12,389 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:21:12,389 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:21:12,390 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:21:12,390 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:21:12,392 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:21:12,393 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:21:12,394 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:21:12,395 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:21:12,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:21:12,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:21:12,412 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:21:12,413 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:21:12,414 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:21:12,414 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:21:12,416 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:21:12,417 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:21:12,418 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:21:12,418 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:21:12,420 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:21:12,420 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:21:12,422 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:21:12,422 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:21:12,427 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:21:12,427 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:21:12,429 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:21:12,429 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:21:12,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:21:12,431 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:21:12,432 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:21:12,432 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:21:12,432 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:21:12,434 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:21:12,435 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:21:12,436 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:21:12,436 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:21:12,437 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:21:12,438 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:21:12,439 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:21:12,440 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:21:12,440 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:21:12,442 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:21:12,442 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:21:12,443 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:21:12,444 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:21:12,446 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:21:12,446 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:21:12,447 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:21:12,449 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:21:12,450 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:21:12,450 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:21:12,451 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:21:12,452 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:21:12,452 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:21:12,453 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:21:12,454 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:21:12,455 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:21:12,455 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:21:12,455 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:21:12,457 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:21:12,457 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:21:12,457 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:21:12,458 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:21:12,459 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:21:12,465 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:21:12,465 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:21:12,465 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:21:12,472 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:21:12,472 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:21:12,477 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:21:12,477 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:21:12,478 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:21:12,478 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:21:12,481 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:21:12,487 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:21:12,487 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:21:12,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:21:12,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:21:12,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:21:12,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:21:12,489 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:21:12,489 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:21:12,489 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:21:12,489 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:21:12,506 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:21:12,515 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:21:12,516 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:21:12,516 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:21:12,522 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:21:12,522 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:21:13,033 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:21:13,033 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:21:13,034 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:21:13,048 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:21:13,085 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:21:13,089 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:21:13,102 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:21:13,412 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:21:13,413 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:21:13,414 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:21:13,414 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:21:13,414 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:21:13,416 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:21:13,416 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:21:13,417 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:21:13,419 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:21:13,420 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:21:13,420 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:21:13,421 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:21:13,421 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:21:13,423 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:21:13,423 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:21:13,423 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:21:13,471 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:21:13,505 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:21:13,530 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:21:13,536 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:21:13,540 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:21:13,575 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:21:13,579 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:21:13,581 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:21:13,583 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:21:13,585 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:21:13,590 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:21:13,590 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:21:13,590 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:21:13,590 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:21:13,591 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:21:13,591 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:21:13,591 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:21:13,592 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:21:13,592 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:21:13,593 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:21:13,594 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:21:13,594 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:21:13,595 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:21:13,596 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:21:13,636 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:21:13,637 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:21:13,637 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:21:13,637 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:21:13,637 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:21:13,638 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1972e513
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:21:13,639 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:21:13,640 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:21:13,641 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:21:13,707 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:21:13,707 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cce57c7, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:21:13,719 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:21:13,725 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:21:13,786 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:21:13,786 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:21:13,815 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:21:13,816 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:21:13,959 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:21:13,960 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:21:13,960 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:21:13,960 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:21:13,960 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:21:13,960 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:21:13,960 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:21:13,996 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f6fd09]
2021-12-05 03:21:13,998 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:13,998 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:13,998 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,022 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,029 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,032 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,032 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535779e4]
2021-12-05 03:21:14,032 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,032 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,032 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,033 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,033 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,033 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,034 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d9d86]
2021-12-05 03:21:14,034 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,034 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,034 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,035 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,035 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,036 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:21:14,036 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24111ef1]
2021-12-05 03:21:14,036 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,036 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,037 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,037 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,038 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,040 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:21:14,041 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde5d22]
2021-12-05 03:21:14,041 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,041 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,042 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,042 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,043 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,043 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:21:14,043 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71812481]
2021-12-05 03:21:14,043 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,044 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,044 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,044 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,045 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,045 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:21:14,045 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b94089b]
2021-12-05 03:21:14,046 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,046 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,047 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,047 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,047 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,048 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:21:14,048 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f9738]
2021-12-05 03:21:14,048 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,048 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,049 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,049 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,049 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,050 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:21:14,050 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
2021-12-05 03:21:14,050 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,050 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,050 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,050 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,051 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,051 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:21:14,051 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
2021-12-05 03:21:14,051 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,051 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,052 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,052 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,052 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,052 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,053 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
2021-12-05 03:21:14,053 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:21:14,053 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:21:14,053 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:21:14,053 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:21:14,057 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:21:14,057 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,081 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,081 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,113 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:21:14,119 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:21:14,119 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:21:14,121 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@222eb8aa
2021-12-05 03:21:14,124 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 4f6f2c95-2ece-4410-8a44-55a7b6189f55 (<unnamed>)
2021-12-05 03:21:14,124 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:21:14,206 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:21:14,282 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:21:14,283 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:21:14,294 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:21:14,339 - DEBUG : [main] (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
2021-12-05 03:21:14,340 - DEBUG : [main] (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-05 03:21:14,351 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:21:14,353 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:21:14,353 - DEBUG : [main] (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
2021-12-05 03:21:14,354 - DEBUG : [main] (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : com.app.models.Product#4
2021-12-05 03:21:14,354 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:21:14,355 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:21:14,357 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:21:14,359 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-12-05 03:21:14,360 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:21:14,361 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:21:14,361 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=4}
2021-12-05 03:21:14,362 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:21:14,363 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:21:14,363 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:21:14,365 - INFO : [main] (ProductDAOImpl.java:52) - get One successfully ...!
2021-12-05 03:21:19,552 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:21:43,043 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:24:20,418 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:24:20,441 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:24:20,449 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:24:20,469 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:24:20,681 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:24:20,685 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:24:20,722 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:24:20,950 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:24:20,950 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:24:20,950 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:24:20,969 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:24:20,969 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:24:20,996 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:24:21,008 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:24:21,043 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:24:21,043 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:24:21,044 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:24:21,046 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:24:21,047 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:24:21,048 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:24:21,051 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:24:21,051 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:24:21,051 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:24:21,052 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:24:21,052 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:24:21,053 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:24:21,055 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:24:21,055 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:24:21,055 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:24:21,056 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:24:21,057 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:24:21,057 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:24:21,059 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:24:21,059 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:24:21,059 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:24:21,061 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:24:21,061 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:24:21,061 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:24:21,064 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:24:21,064 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:24:21,064 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:24:21,066 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:24:21,066 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:24:21,068 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:24:21,068 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:24:21,069 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:24:21,070 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:24:21,071 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:24:21,072 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:24:21,073 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:24:21,073 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:24:21,074 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:24:21,075 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:24:21,090 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:24:21,091 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:24:21,092 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:24:21,093 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:24:21,095 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:24:21,095 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:24:21,097 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:24:21,098 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:24:21,099 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:24:21,099 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:24:21,101 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:24:21,101 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:24:21,106 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:24:21,106 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:24:21,108 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:24:21,108 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:24:21,110 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:24:21,110 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:24:21,111 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:24:21,111 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:24:21,111 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:24:21,113 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:24:21,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:24:21,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:24:21,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:24:21,117 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:24:21,118 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:24:21,119 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:24:21,120 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:24:21,120 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:24:21,122 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:24:21,122 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:24:21,123 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:24:21,124 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:24:21,126 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:24:21,126 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:24:21,127 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:24:21,128 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:24:21,128 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:24:21,128 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:24:21,130 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:24:21,130 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:24:21,130 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:24:21,132 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:24:21,133 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:24:21,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:24:21,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:24:21,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:24:21,135 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:24:21,135 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:24:21,135 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:24:21,136 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:24:21,137 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:24:21,144 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:24:21,144 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:24:21,145 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:24:21,151 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:24:21,151 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:24:21,157 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:24:21,158 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:24:21,160 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:24:21,161 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:24:21,163 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:24:21,169 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:24:21,169 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:24:21,170 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:24:21,170 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:24:21,171 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:24:21,171 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:24:21,171 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:24:21,171 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:24:21,171 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:24:21,171 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:24:21,194 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:24:21,201 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:24:21,202 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:24:21,202 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:24:21,206 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:24:21,207 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:24:21,682 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:24:21,682 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:24:21,682 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:24:21,697 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:24:21,735 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:24:21,738 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:24:21,752 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:24:22,161 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:24:22,162 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:24:22,163 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:24:22,163 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:24:22,164 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:24:22,166 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:24:22,166 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:24:22,168 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:24:22,171 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:24:22,172 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:24:22,173 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:24:22,174 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:24:22,176 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:24:22,180 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:24:22,180 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:24:22,181 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:24:22,263 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:24:22,308 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:24:22,342 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:24:22,355 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:24:22,362 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:24:22,416 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:24:22,420 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:24:22,422 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:24:22,424 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:24:22,429 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:24:22,435 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:24:22,435 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:24:22,435 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:24:22,436 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:24:22,436 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:24:22,437 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:24:22,437 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:24:22,437 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:24:22,438 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:24:22,438 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:24:22,440 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:24:22,441 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:24:22,441 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:24:22,445 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:24:22,508 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:24:22,512 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:24:22,512 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:24:22,512 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:24:22,512 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:24:22,512 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:24:22,513 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:24:22,514 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:24:22,514 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:24:22,514 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:24:22,514 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:24:22,515 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:24:22,515 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:24:22,515 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:24:22,515 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1972e513
2021-12-05 03:24:22,515 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:24:22,515 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:24:22,516 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:24:22,516 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:24:22,516 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:24:22,516 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:24:22,516 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:24:22,517 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:24:22,517 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:24:22,517 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:24:22,517 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:24:22,518 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:24:22,518 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:24:22,615 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:24:22,615 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cce57c7, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:24:22,634 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:24:22,645 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:24:22,748 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:24:22,749 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:24:22,845 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:24:22,845 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:24:22,961 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:24:22,961 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:24:22,961 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:24:22,961 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:24:22,961 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:24:22,961 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:24:22,962 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:24:22,995 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f6fd09]
2021-12-05 03:24:22,997 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:22,997 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:22,998 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,018 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,023 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,027 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,027 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535779e4]
2021-12-05 03:24:23,027 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,028 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,028 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,028 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,029 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,029 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,030 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d9d86]
2021-12-05 03:24:23,030 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,030 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,031 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,031 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,032 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,032 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:24:23,033 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24111ef1]
2021-12-05 03:24:23,033 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,033 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,033 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,034 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,034 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,035 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:24:23,035 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde5d22]
2021-12-05 03:24:23,035 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,035 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,036 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,036 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,037 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,037 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:24:23,037 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71812481]
2021-12-05 03:24:23,038 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,038 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,038 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,038 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,039 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,039 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:24:23,040 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b94089b]
2021-12-05 03:24:23,040 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,040 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,040 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,041 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,042 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,042 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:24:23,043 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f9738]
2021-12-05 03:24:23,043 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,043 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,044 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,045 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,046 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,046 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:24:23,046 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
2021-12-05 03:24:23,047 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,047 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,047 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,048 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,048 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,048 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:24:23,049 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
2021-12-05 03:24:23,049 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,049 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,049 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,050 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,050 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,050 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,051 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
2021-12-05 03:24:23,051 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:24:23,051 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:24:23,052 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:24:23,052 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:24:23,053 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:24:23,053 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,080 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,081 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,106 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:24:23,111 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2021-12-05 03:24:23,111 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:24:23,113 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@222eb8aa
2021-12-05 03:24:23,115 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 0d58a540-6fc4-49c1-b47c-92a039fb41a1 (<unnamed>)
2021-12-05 03:24:23,115 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:24:23,197 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:24:23,277 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:24:23,278 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:24:23,290 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,334 - DEBUG : [main] (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
2021-12-05 03:24:23,334 - DEBUG : [main] (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-05 03:24:23,345 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:24:23,347 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:24:23,348 - DEBUG : [main] (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
2021-12-05 03:24:23,348 - DEBUG : [main] (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : com.app.models.Product#4
2021-12-05 03:24:23,348 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:24:23,349 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:24:23,351 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:24:23,353 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-12-05 03:24:23,354 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:24:23,355 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:24:23,355 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=4}
2021-12-05 03:24:23,356 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:24:23,357 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:24:23,357 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:24:23,359 - INFO : [main] (ProductDAOImpl.java:52) - get One successfully ...!
2021-12-05 03:24:23,360 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:24:23,360 - INFO : [main] (ProductDAOImpl.java:70) - Update traitment start ...!
2021-12-05 03:24:23,363 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:24:23,363 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:24:23,363 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:24:23,366 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-12-05 03:24:23,367 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:24:23,367 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:24:23,367 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=321.2, name=Product Update, id=4}
2021-12-05 03:24:23,375 - DEBUG : [main] (SqlStatementLogger.java:92) - update product set name=?, price=? where id=?
2021-12-05 03:24:23,771 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:24:23,771 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:24:23,771 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:24:23,771 - DEBUG : [main] (JdbcCoordinatorImpl.java:177) - HHH000420: Closing un-released batch
2021-12-05 03:24:23,771 - INFO : [main] (ProductDAOImpl.java:75) - get One successfully ...!
2021-12-05 03:24:23,772 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:24:23,773 - INFO : [main] (ProductDAOImpl.java:46) - get One traitment start ...!
2021-12-05 03:24:23,773 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:24:23,775 - DEBUG : [main] (ResultSetProcessorImpl.java:120) - Starting ResultSet row #0
2021-12-05 03:24:23,775 - DEBUG : [main] (EntityReferenceInitializerImpl.java:126) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-12-05 03:24:23,776 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:24:23,777 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:24:23,777 - DEBUG : [main] (ResourceRegistryStandardImpl.java:73) - HHH000387: ResultSet's statement was not registered
2021-12-05 03:24:23,777 - DEBUG : [main] (AbstractLoadPlanBasedEntityLoader.java:189) - Done entity load : com.app.models.Product#4
2021-12-05 03:24:23,778 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:24:23,778 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:24:23,778 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:24:23,778 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-12-05 03:24:23,778 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:24:23,779 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:24:23,779 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=321.2, name=Product Update, id=4}
2021-12-05 03:24:23,779 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:24:23,780 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:24:23,780 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:24:23,781 - INFO : [main] (ProductDAOImpl.java:52) - get One successfully ...!
2021-12-05 03:24:51,681 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:40:21,222 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:40:21,250 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:40:21,254 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:40:21,273 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:40:21,489 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:40:21,493 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:40:21,530 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:40:21,754 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:40:21,755 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:40:21,755 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:40:21,772 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:40:21,772 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:40:21,800 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:40:21,814 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:40:21,849 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:40:21,850 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:40:21,852 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:40:21,853 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:40:21,855 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:40:21,856 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:40:21,858 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:40:21,858 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:40:21,858 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:40:21,860 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:40:21,860 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:40:21,860 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:40:21,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:40:21,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:40:21,863 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:40:21,865 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:40:21,865 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:40:21,866 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:40:21,868 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:40:21,868 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:40:21,868 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:40:21,870 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:40:21,870 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:40:21,871 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:40:21,873 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:40:21,874 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:40:21,874 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:40:21,877 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:40:21,877 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:40:21,879 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:40:21,879 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:40:21,880 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:40:21,880 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:40:21,881 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:40:21,882 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:40:21,883 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:40:21,884 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:40:21,885 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:40:21,885 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:40:21,903 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:40:21,903 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:40:21,904 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:40:21,905 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:40:21,906 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:40:21,906 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:40:21,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:40:21,908 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:40:21,911 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:40:21,911 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:40:21,913 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:40:21,914 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:40:21,919 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:40:21,920 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:40:21,922 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:40:21,922 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:40:21,923 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:40:21,923 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:40:21,924 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:40:21,925 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:40:21,925 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:40:21,927 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:40:21,928 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:40:21,929 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:40:21,929 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:40:21,930 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:40:21,932 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:40:21,932 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:40:21,934 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:40:21,934 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:40:21,936 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:40:21,936 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:40:21,938 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:40:21,938 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:40:21,940 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:40:21,940 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:40:21,941 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:40:21,942 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:40:21,942 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:40:21,942 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:40:21,945 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:40:21,945 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:40:21,945 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:40:21,946 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:40:21,947 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:40:21,948 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:40:21,949 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:40:21,949 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:40:21,950 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:40:21,950 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:40:21,950 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:40:21,951 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:40:21,952 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:40:21,956 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:40:21,957 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:40:21,957 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:40:21,966 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:40:21,966 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:40:21,970 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:40:21,970 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:40:21,971 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:40:21,972 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:40:21,974 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:40:21,983 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:40:21,983 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:40:21,985 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:40:21,985 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:40:21,985 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:40:21,985 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:40:21,985 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:40:21,986 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:40:21,986 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:40:21,986 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:40:22,009 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:40:22,016 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:40:22,017 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:40:22,017 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:40:22,020 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:40:22,021 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:40:22,632 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:40:22,632 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:40:22,632 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:40:22,656 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:40:22,723 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:40:22,728 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:40:22,749 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:40:23,186 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:40:23,187 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:40:23,189 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:40:23,189 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:40:23,190 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:40:23,192 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:40:23,195 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:40:23,197 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:40:23,199 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:40:23,200 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:40:23,201 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:40:23,202 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:40:23,203 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:40:23,204 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:40:23,205 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:40:23,205 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:40:23,283 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:40:23,334 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:40:23,354 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getAll => from Product
2021-12-05 03:40:23,354 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getByMc => from Product where name=:name
2021-12-05 03:40:23,364 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:40:23,372 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:40:23,377 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:40:23,407 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:40:23,410 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:40:23,412 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:40:23,414 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:40:23,416 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:40:23,423 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:40:23,423 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:40:23,423 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:40:23,423 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:40:23,424 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:40:23,424 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:40:23,425 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:40:23,425 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:40:23,425 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:40:23,425 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:40:23,428 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:40:23,428 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:40:23,428 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:40:23,431 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:40:23,474 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:40:23,476 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:40:23,476 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:40:23,476 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:40:23,477 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:40:23,478 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:40:23,478 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:40:23,478 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:40:23,478 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:40:23,478 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:40:23,478 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4a8355dd
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:40:23,479 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:40:23,480 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:40:23,481 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:40:23,481 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:40:23,481 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:40:23,481 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:40:23,551 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:40:23,552 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ebea008, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:40:23,564 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:40:23,571 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:40:23,640 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:40:23,640 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:40:23,719 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:40:23,719 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:40:23,862 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:40:23,863 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:40:23,863 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:40:23,863 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:40:23,863 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:40:23,863 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:40:23,864 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:40:23,911 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c5e07]
2021-12-05 03:40:23,913 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,914 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,914 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,944 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,952 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,955 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:40:23,956 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:40:23,956 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,956 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,956 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,957 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,957 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,957 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:40:23,958 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:40:23,958 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,958 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,960 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,961 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,961 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,962 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:40:23,962 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388526fb]
2021-12-05 03:40:23,962 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,962 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,963 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,963 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,964 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,964 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:40:23,965 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7803bfd]
2021-12-05 03:40:23,965 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,965 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,965 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,966 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,966 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,967 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:40:23,967 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531f4093]
2021-12-05 03:40:23,967 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,967 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,967 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,968 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,971 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,972 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:40:23,972 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436a7db]
2021-12-05 03:40:23,972 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,972 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,973 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,973 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,974 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,974 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:40:23,974 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c660a]
2021-12-05 03:40:23,974 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,975 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,975 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,976 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,977 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,977 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:40:23,977 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25aca718]
2021-12-05 03:40:23,977 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,978 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,978 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,978 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,979 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,979 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:40:23,979 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afdd473]
2021-12-05 03:40:23,980 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,980 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,980 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,981 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,981 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,982 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:40:23,982 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7776ab]
2021-12-05 03:40:23,982 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:40:23,982 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:40:23,983 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:40:23,983 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:40:23,983 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:40:23,984 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:40:24,016 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:40:24,016 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:40:24,045 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:40:24,054 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 2 named HQL queries
2021-12-05 03:40:24,054 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getAll
2021-12-05 03:40:24,061 - DEBUG : [main] (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13d73fa
2021-12-05 03:40:24,062 - INFO : [main] (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2021-12-05 03:40:24,099 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product
2021-12-05 03:40:24,108 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Product'

2021-12-05 03:40:24,109 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:40:24,152 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:40:24,174 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:40:24,174 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:40:24,175 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
2021-12-05 03:40:24,186 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:40:24,197 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:40:24,197 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:40:24,198 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}

2021-12-05 03:40:24,198 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:40:24,212 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product
2021-12-05 03:40:24,212 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:40:24,213 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:40:24,223 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getByMc
2021-12-05 03:40:24,224 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product where name=:name
2021-12-05 03:40:24,229 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2021-12-05 03:40:24,229 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:40:24,230 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:40:24,230 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:40:24,234 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-12-05 03:40:24,237 - DEBUG : [main] (DotNode.java:666) - getDataType() : name -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:40:24,238 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.name -> product0_.name
2021-12-05 03:40:24,241 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:40:24,241 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.name {synthetic-alias} name ) ? ) ) )
2021-12-05 03:40:24,241 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:40:24,242 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:40:24,243 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:40:24,244 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=com.app.models.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@704d6e83}

2021-12-05 03:40:24,245 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:40:24,247 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product where name=:name
2021-12-05 03:40:24,247 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name=?
2021-12-05 03:40:24,247 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:40:24,253 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:40:24,256 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ee2b6f9
2021-12-05 03:40:24,260 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 369bf655-db10-4d77-9ce0-9b1ee1629b4b (<unnamed>)
2021-12-05 03:40:24,261 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:40:24,377 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:40:24,452 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:40:24,453 - INFO : [main] (ProductDAOImpl.java:117) - Get All traitment Begin ...!
2021-12-05 03:40:24,477 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:40:24,544 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 0
2021-12-05 03:40:24,549 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#1]
2021-12-05 03:40:24,564 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 1
2021-12-05 03:40:24,564 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#2]
2021-12-05 03:40:24,565 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 2
2021-12-05 03:40:24,565 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#4]
2021-12-05 03:40:24,565 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 3
2021-12-05 03:40:24,566 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#6]
2021-12-05 03:40:24,568 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#1]
2021-12-05 03:40:24,572 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#1]
2021-12-05 03:40:24,572 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#2]
2021-12-05 03:40:24,572 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#2]
2021-12-05 03:40:24,572 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:40:24,573 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:40:24,573 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#6]
2021-12-05 03:40:24,573 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#6]
2021-12-05 03:40:24,575 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:40:24,576 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:40:24,581 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:40:24,585 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2021-12-05 03:40:24,585 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:40:24,587 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:40:24,587 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=321.2, name=Product Update, id=4}
2021-12-05 03:40:24,587 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=2}
2021-12-05 03:40:24,588 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=1}
2021-12-05 03:40:24,588 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=10.2, name=Product01, id=6}
2021-12-05 03:40:24,591 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:40:24,592 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:40:24,592 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:40:24,595 - INFO : [main] (ProductDAOImpl.java:123) - Get All Successfully ...!
2021-12-05 03:40:52,640 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:41:13,893 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:41:13,916 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:41:13,920 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:41:13,940 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:41:14,149 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:41:14,153 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:41:14,190 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:41:14,420 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:41:14,420 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:41:14,420 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:41:14,438 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:41:14,438 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:41:14,464 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:41:14,477 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:41:14,514 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:41:14,514 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:41:14,515 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:41:14,517 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:41:14,518 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:41:14,519 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:41:14,521 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:41:14,521 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:41:14,521 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:41:14,522 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:41:14,523 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:41:14,523 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:41:14,525 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:41:14,525 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:41:14,525 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:41:14,527 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:41:14,528 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:41:14,528 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:41:14,530 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:41:14,530 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:41:14,531 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:41:14,533 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:41:14,533 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:41:14,534 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:41:14,536 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:41:14,536 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:41:14,536 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:41:14,539 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:41:14,539 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:41:14,541 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:41:14,541 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:41:14,544 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:41:14,544 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:41:14,546 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:41:14,547 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:41:14,549 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:41:14,549 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:41:14,552 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:41:14,552 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:41:14,569 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:41:14,569 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:41:14,570 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:41:14,571 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:41:14,573 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:41:14,573 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:41:14,576 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:41:14,576 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:41:14,579 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:41:14,579 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:41:14,582 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:41:14,582 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:41:14,587 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:41:14,587 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:41:14,590 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:41:14,590 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:41:14,592 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:41:14,592 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:41:14,593 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:41:14,594 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:41:14,594 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:41:14,595 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:41:14,597 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:41:14,597 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:41:14,597 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:41:14,598 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:41:14,600 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:41:14,600 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:41:14,602 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:41:14,602 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:41:14,604 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:41:14,604 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:41:14,606 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:41:14,606 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:41:14,608 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:41:14,608 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:41:14,609 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:41:14,611 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:41:14,611 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:41:14,611 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:41:14,613 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:41:14,613 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:41:14,613 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:41:14,615 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:41:14,616 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:41:14,617 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:41:14,617 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:41:14,618 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:41:14,619 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:41:14,619 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:41:14,619 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:41:14,620 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:41:14,621 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:41:14,625 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:41:14,626 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:41:14,627 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:41:14,635 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:41:14,636 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:41:14,640 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:41:14,640 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:41:14,641 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:41:14,641 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:41:14,644 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:41:14,648 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:41:14,649 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:41:14,650 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:41:14,650 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:41:14,650 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:41:14,651 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:41:14,651 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:41:14,652 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:41:14,652 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:41:14,653 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:41:14,672 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:41:14,680 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:41:14,681 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:41:14,682 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:41:14,691 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:41:14,692 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:41:15,387 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:41:15,388 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:41:15,388 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:41:15,402 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:41:15,443 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:41:15,446 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:41:15,462 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:41:15,765 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:41:15,766 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:41:15,767 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:41:15,767 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:41:15,767 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:41:15,769 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:41:15,769 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:41:15,771 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:41:15,772 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:41:15,773 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:41:15,773 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:41:15,774 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:41:15,774 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:41:15,775 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:41:15,775 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:41:15,776 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:41:15,824 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:41:15,865 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:41:15,883 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getAll => from Product
2021-12-05 03:41:15,883 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getByMc => from Product where name=:name
2021-12-05 03:41:15,892 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:41:15,899 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:41:15,902 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:41:15,933 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:41:15,936 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:41:15,938 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:41:15,939 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:41:15,942 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:41:15,948 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:41:15,949 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:41:15,949 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:41:15,949 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:41:15,949 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:41:15,950 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:41:15,951 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:41:15,951 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:41:15,951 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:41:15,951 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:41:15,954 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:41:15,954 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:41:15,954 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:41:15,956 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:41:15,998 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:41:15,999 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:41:15,999 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:41:15,999 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:41:16,000 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4a8355dd
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:41:16,001 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:41:16,002 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:41:16,003 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:41:16,003 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:41:16,067 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:41:16,067 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ebea008, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:41:16,079 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:41:16,084 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:41:16,147 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:41:16,148 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:41:16,216 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:41:16,216 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:41:16,320 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:41:16,321 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:41:16,321 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:41:16,321 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:41:16,321 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:41:16,321 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:41:16,322 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:41:16,358 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c5e07]
2021-12-05 03:41:16,361 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,361 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,361 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,379 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,387 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,392 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:16,393 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:41:16,394 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,394 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,395 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,395 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,396 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,396 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:16,396 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:41:16,397 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,397 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,397 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,398 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,399 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,399 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:16,399 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388526fb]
2021-12-05 03:41:16,399 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,400 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,400 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,400 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,401 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,401 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:16,401 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7803bfd]
2021-12-05 03:41:16,402 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,402 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,402 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,402 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,403 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,403 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:16,403 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531f4093]
2021-12-05 03:41:16,403 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,403 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,403 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,404 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,404 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,404 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:16,404 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436a7db]
2021-12-05 03:41:16,405 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,405 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,405 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,405 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,406 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,406 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:41:16,406 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c660a]
2021-12-05 03:41:16,407 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,407 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,407 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,408 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,408 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,408 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:16,408 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25aca718]
2021-12-05 03:41:16,408 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,408 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,409 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,409 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,410 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,410 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:16,411 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afdd473]
2021-12-05 03:41:16,411 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,411 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,411 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,411 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,412 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,412 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:16,412 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7776ab]
2021-12-05 03:41:16,412 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:16,413 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:16,413 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:16,413 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:16,415 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:16,415 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:16,439 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:16,440 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:16,469 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:41:16,474 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 2 named HQL queries
2021-12-05 03:41:16,475 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getAll
2021-12-05 03:41:16,482 - DEBUG : [main] (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13d73fa
2021-12-05 03:41:16,482 - INFO : [main] (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2021-12-05 03:41:16,515 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product
2021-12-05 03:41:16,526 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Product'

2021-12-05 03:41:16,527 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:16,590 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:41:16,614 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:41:16,614 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:41:16,615 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
2021-12-05 03:41:16,626 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:41:16,635 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:41:16,635 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:41:16,636 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}

2021-12-05 03:41:16,636 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:16,645 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product
2021-12-05 03:41:16,646 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:41:16,646 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:16,656 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getByMc
2021-12-05 03:41:16,657 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product where name=:name
2021-12-05 03:41:16,661 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2021-12-05 03:41:16,662 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:16,662 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:41:16,663 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:41:16,665 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-12-05 03:41:16,667 - DEBUG : [main] (DotNode.java:666) - getDataType() : name -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:41:16,668 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.name -> product0_.name
2021-12-05 03:41:16,669 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:41:16,670 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.name {synthetic-alias} name ) ? ) ) )
2021-12-05 03:41:16,670 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:41:16,670 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:41:16,671 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:41:16,671 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=com.app.models.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@704d6e83}

2021-12-05 03:41:16,672 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:16,672 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product where name=:name
2021-12-05 03:41:16,672 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name=?
2021-12-05 03:41:16,672 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:16,678 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:41:16,681 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ee2b6f9
2021-12-05 03:41:16,684 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: cd9ef3e7-f5c9-48c2-bb84-9f3cfc8087f3 (<unnamed>)
2021-12-05 03:41:16,684 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:41:16,803 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:41:16,866 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:41:16,867 - INFO : [main] (ProductDAOImpl.java:141) - Get All traitment Begin ...!
2021-12-05 03:41:40,923 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:41:40,955 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:41:40,962 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:41:40,987 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:41:41,399 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:41:41,402 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:41:41,441 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:41:41,790 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:41:41,791 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:41:41,791 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:41:41,821 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:41:41,821 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:41:41,870 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:41:41,900 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:41:41,949 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:41:41,949 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:41:41,952 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:41:41,954 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:41:41,957 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:41:41,958 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:41:41,962 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:41:41,963 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:41:41,963 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:41:41,965 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:41:41,966 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:41:41,966 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:41:41,970 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:41:41,970 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:41:41,970 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:41:41,973 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:41:41,973 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:41:41,974 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:41:41,978 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:41:41,979 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:41:41,979 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:41:41,983 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:41:41,983 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:41:41,985 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:41:41,989 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:41:41,990 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:41:41,990 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:41:41,996 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:41:41,996 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:41:41,998 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:41:41,999 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:41:42,001 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:41:42,001 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:41:42,003 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:41:42,005 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:41:42,007 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:41:42,008 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:41:42,011 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:41:42,011 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:41:42,037 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:41:42,037 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:41:42,040 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:41:42,040 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:41:42,043 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:41:42,043 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:41:42,047 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:41:42,048 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:41:42,051 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:41:42,051 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:41:42,054 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:41:42,054 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:41:42,064 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:41:42,064 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:41:42,068 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:41:42,068 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:41:42,071 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:41:42,071 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:41:42,074 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:41:42,074 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:41:42,075 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:41:42,078 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:41:42,080 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:41:42,081 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:41:42,081 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:41:42,083 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:41:42,085 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:41:42,086 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:41:42,088 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:41:42,088 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:41:42,090 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:41:42,090 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:41:42,091 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:41:42,091 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:41:42,094 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:41:42,094 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:41:42,095 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:41:42,097 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:41:42,097 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:41:42,097 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:41:42,099 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:41:42,099 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:41:42,100 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:41:42,101 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:41:42,102 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:41:42,103 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:41:42,104 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:41:42,104 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:41:42,105 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:41:42,105 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:41:42,105 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:41:42,106 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:41:42,107 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:41:42,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:41:42,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:41:42,116 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:41:42,127 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:41:42,127 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:41:42,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:41:42,135 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:41:42,136 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:41:42,137 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:41:42,140 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:41:42,148 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:41:42,148 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:41:42,149 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:41:42,150 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:41:42,150 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:41:42,150 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:41:42,150 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:41:42,150 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:41:42,151 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:41:42,151 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:41:42,171 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:41:42,179 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:41:42,180 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:41:42,180 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:41:42,185 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:41:42,186 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:41:42,886 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:41:42,886 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:41:42,887 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:41:42,917 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:41:43,010 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:41:43,014 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:41:43,036 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:41:43,511 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:41:43,512 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:41:43,513 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:41:43,513 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:41:43,514 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:41:43,516 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:41:43,517 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:41:43,520 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:41:43,522 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:41:43,523 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:41:43,525 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:41:43,526 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:41:43,526 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:41:43,528 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:41:43,528 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:41:43,528 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:41:43,581 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:41:43,624 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:41:43,647 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getAll => from Product
2021-12-05 03:41:43,647 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getByMc => from Product where name=:name
2021-12-05 03:41:43,657 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:41:43,665 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:41:43,669 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:41:43,702 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:41:43,705 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:41:43,707 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:41:43,708 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:41:43,712 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:41:43,718 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:41:43,718 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:41:43,718 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:41:43,718 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:41:43,719 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:41:43,719 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:41:43,719 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:41:43,720 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:41:43,720 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:41:43,720 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:41:43,722 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:41:43,722 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:41:43,722 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:41:43,724 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:41:43,768 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:41:43,769 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:41:43,770 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4a8355dd
2021-12-05 03:41:43,771 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:41:43,772 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:41:43,773 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:41:43,773 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:41:43,843 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:41:43,843 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ebea008, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:41:43,855 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:41:43,864 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:41:43,961 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:41:43,961 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:41:44,038 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:41:44,039 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:41:44,162 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:41:44,162 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:41:44,162 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:41:44,162 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:41:44,163 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:41:44,163 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:41:44,163 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:41:44,214 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c5e07]
2021-12-05 03:41:44,217 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,218 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,218 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,239 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,246 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,249 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:44,249 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:41:44,249 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,250 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,250 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,250 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,251 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,251 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:44,251 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:41:44,252 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,252 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,252 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,252 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,253 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,253 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:44,253 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388526fb]
2021-12-05 03:41:44,254 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,254 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,254 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,254 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,255 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,255 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:44,255 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7803bfd]
2021-12-05 03:41:44,256 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,256 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,256 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,256 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,257 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,257 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:44,257 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531f4093]
2021-12-05 03:41:44,258 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,258 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,258 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,258 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,262 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,262 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:44,262 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436a7db]
2021-12-05 03:41:44,263 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,263 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,263 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,263 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,264 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,265 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:41:44,265 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c660a]
2021-12-05 03:41:44,265 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,265 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,265 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,266 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,266 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,267 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:44,267 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25aca718]
2021-12-05 03:41:44,267 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,267 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,267 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,267 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,268 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,268 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:41:44,268 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afdd473]
2021-12-05 03:41:44,268 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,268 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,268 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,269 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,269 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,269 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:44,269 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7776ab]
2021-12-05 03:41:44,270 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:41:44,270 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:41:44,270 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:41:44,270 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:41:44,271 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:41:44,271 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:44,299 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:44,300 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:41:44,329 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:41:44,334 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 2 named HQL queries
2021-12-05 03:41:44,334 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getAll
2021-12-05 03:41:44,342 - DEBUG : [main] (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13d73fa
2021-12-05 03:41:44,342 - INFO : [main] (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2021-12-05 03:41:44,378 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product
2021-12-05 03:41:44,386 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Product'

2021-12-05 03:41:44,386 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:44,420 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:41:44,441 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:41:44,441 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:41:44,441 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
2021-12-05 03:41:44,453 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:41:44,462 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:41:44,463 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:41:44,464 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}

2021-12-05 03:41:44,464 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:44,477 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product
2021-12-05 03:41:44,478 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:41:44,478 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:44,488 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getByMc
2021-12-05 03:41:44,490 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product where name=:name
2021-12-05 03:41:44,499 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2021-12-05 03:41:44,499 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:44,499 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:41:44,500 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:41:44,503 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-12-05 03:41:44,505 - DEBUG : [main] (DotNode.java:666) - getDataType() : name -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:41:44,506 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.name -> product0_.name
2021-12-05 03:41:44,509 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:41:44,509 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.name {synthetic-alias} name ) ? ) ) )
2021-12-05 03:41:44,510 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:41:44,511 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:41:44,511 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:41:44,512 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=com.app.models.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@704d6e83}

2021-12-05 03:41:44,512 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:44,513 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product where name=:name
2021-12-05 03:41:44,513 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name=?
2021-12-05 03:41:44,513 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:41:44,517 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:41:44,520 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ee2b6f9
2021-12-05 03:41:44,525 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1cdd3148-9690-4ce8-8256-9a4a1befcc47 (<unnamed>)
2021-12-05 03:41:44,525 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:41:44,650 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:41:44,712 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:41:44,713 - INFO : [main] (ProductDAOImpl.java:141) - Get All traitment Begin ...!
2021-12-05 03:41:44,741 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name=?
2021-12-05 03:41:44,802 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:41:44,805 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:41:44,806 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:41:44,806 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:41:44,810 - INFO : [main] (ProductDAOImpl.java:147) - Get All Successfully ...!
2021-12-05 03:41:45,401 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:42:11,686 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:42:11,710 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:42:11,714 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:42:11,733 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:42:11,961 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:42:11,965 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:42:12,006 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:42:12,258 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:42:12,258 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:42:12,258 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:42:12,275 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:42:12,275 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:42:12,301 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:42:12,315 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:42:12,372 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:42:12,373 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:42:12,375 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:42:12,378 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:42:12,380 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:42:12,382 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:42:12,385 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:42:12,385 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:42:12,385 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:42:12,387 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:42:12,388 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:42:12,388 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:42:12,392 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:42:12,393 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:42:12,393 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:42:12,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:42:12,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:42:12,396 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:42:12,400 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:42:12,400 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:42:12,400 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:42:12,402 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:42:12,402 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:42:12,402 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:42:12,405 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:42:12,406 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:42:12,406 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:42:12,408 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:42:12,408 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:42:12,410 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:42:12,410 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:42:12,412 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:42:12,412 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:42:12,413 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:42:12,414 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:42:12,415 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:42:12,416 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:42:12,418 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:42:12,418 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:42:12,439 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:42:12,439 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:42:12,441 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:42:12,442 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:42:12,445 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:42:12,445 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:42:12,448 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:42:12,448 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:42:12,452 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:42:12,452 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:42:12,455 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:42:12,455 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:42:12,461 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:42:12,462 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:42:12,464 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:42:12,464 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:42:12,466 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:42:12,466 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:42:12,468 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:42:12,468 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:42:12,468 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:42:12,470 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:42:12,472 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:42:12,472 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:42:12,473 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:42:12,474 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:42:12,476 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:42:12,476 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:42:12,478 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:42:12,479 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:42:12,481 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:42:12,481 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:42:12,484 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:42:12,484 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:42:12,487 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:42:12,487 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:42:12,488 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:42:12,490 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:42:12,490 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:42:12,490 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:42:12,493 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:42:12,493 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:42:12,493 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:42:12,495 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:42:12,496 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:42:12,498 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:42:12,498 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:42:12,499 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:42:12,500 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:42:12,501 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:42:12,501 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:42:12,502 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:42:12,503 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:42:12,511 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:42:12,511 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:42:12,514 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:42:12,527 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:42:12,527 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:42:12,537 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:42:12,537 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:42:12,538 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:42:12,539 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:42:12,545 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:42:12,551 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:42:12,552 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:42:12,553 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:42:12,553 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:42:12,553 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:42:12,554 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:42:12,554 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:42:12,554 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:42:12,554 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:42:12,554 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:42:12,602 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:42:12,608 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:42:12,610 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:42:12,610 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:42:12,616 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:42:12,616 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:42:12,899 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:42:13,249 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:42:13,250 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:42:13,250 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:42:13,265 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:42:13,306 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:42:13,308 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:42:13,324 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:42:13,636 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:42:13,637 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:42:13,638 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:42:13,638 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:42:13,638 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:42:13,640 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:42:13,640 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:42:13,643 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:42:13,645 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:42:13,646 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:42:13,646 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:42:13,647 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:42:13,648 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:42:13,649 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:42:13,649 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:42:13,650 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:42:13,702 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:42:13,743 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:42:13,763 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getAll => from Product
2021-12-05 03:42:13,763 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getByMc => from Product where name=:name
2021-12-05 03:42:13,772 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:42:13,779 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:42:13,783 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:42:13,822 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:42:13,826 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:42:13,829 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:42:13,830 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:42:13,833 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:42:13,845 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:42:13,846 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:42:13,846 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:42:13,847 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:42:13,848 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:42:13,850 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:42:13,850 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:42:13,851 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:42:13,851 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:42:13,852 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:42:13,854 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:42:13,854 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:42:13,854 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:42:13,856 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:42:13,908 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:42:13,910 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:42:13,910 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:42:13,910 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:42:13,910 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:42:13,911 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:42:13,912 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4a8355dd
2021-12-05 03:42:13,913 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:42:13,913 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:42:13,913 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:42:13,913 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:42:13,913 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:42:13,913 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:42:13,914 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:42:13,914 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:42:13,914 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:42:13,914 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:42:13,914 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:42:13,914 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:42:13,915 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:42:14,022 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:42:14,022 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ebea008, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:42:14,057 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:42:14,067 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:42:14,173 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:42:14,174 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:42:14,278 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:42:14,278 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:42:14,486 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:42:14,486 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:42:14,486 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:42:14,487 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:42:14,487 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:42:14,487 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:42:14,488 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:42:14,550 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c5e07]
2021-12-05 03:42:14,553 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,553 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,554 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,605 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,617 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,621 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:14,622 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:42:14,622 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,622 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,623 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,624 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,624 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,625 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:14,626 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:42:14,628 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,629 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,629 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,630 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,631 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,632 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:14,632 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388526fb]
2021-12-05 03:42:14,633 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,633 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,634 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,634 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,635 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,635 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:14,636 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7803bfd]
2021-12-05 03:42:14,636 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,636 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,637 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,637 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,638 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,638 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:14,639 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531f4093]
2021-12-05 03:42:14,639 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,639 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,639 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,640 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,641 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,641 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:14,642 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436a7db]
2021-12-05 03:42:14,646 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,646 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,647 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,647 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,648 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,648 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:42:14,649 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c660a]
2021-12-05 03:42:14,649 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,649 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,650 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,650 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,651 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,651 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:14,652 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25aca718]
2021-12-05 03:42:14,652 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,652 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,653 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,653 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,654 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,654 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:14,655 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afdd473]
2021-12-05 03:42:14,655 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,655 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,655 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,656 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,657 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,657 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:14,658 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7776ab]
2021-12-05 03:42:14,662 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:14,663 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:14,663 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:14,663 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:14,664 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:14,665 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:14,700 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:14,701 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:14,739 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:42:14,749 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 2 named HQL queries
2021-12-05 03:42:14,749 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getAll
2021-12-05 03:42:14,757 - DEBUG : [main] (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13d73fa
2021-12-05 03:42:14,757 - INFO : [main] (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2021-12-05 03:42:14,817 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product
2021-12-05 03:42:14,858 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Product'

2021-12-05 03:42:14,858 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:14,908 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:42:14,940 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:42:14,941 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:42:14,941 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
2021-12-05 03:42:14,956 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:42:14,967 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:42:14,967 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:42:14,968 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}

2021-12-05 03:42:14,968 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:14,983 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product
2021-12-05 03:42:14,984 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:42:14,984 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:14,994 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getByMc
2021-12-05 03:42:14,995 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product where name=:name
2021-12-05 03:42:14,998 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2021-12-05 03:42:14,999 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:14,999 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:42:15,000 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:42:15,002 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-12-05 03:42:15,006 - DEBUG : [main] (DotNode.java:666) - getDataType() : name -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:42:15,007 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.name -> product0_.name
2021-12-05 03:42:15,011 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:42:15,011 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.name {synthetic-alias} name ) ? ) ) )
2021-12-05 03:42:15,013 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:42:15,013 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:42:15,013 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:42:15,015 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=com.app.models.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@704d6e83}

2021-12-05 03:42:15,016 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:15,016 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product where name=:name
2021-12-05 03:42:15,016 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name=?
2021-12-05 03:42:15,019 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:15,025 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:42:15,031 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ee2b6f9
2021-12-05 03:42:15,034 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: f992c12c-c3c7-4351-92b5-dc88c1ce4be0 (<unnamed>)
2021-12-05 03:42:15,035 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:42:15,160 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:42:15,229 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:42:15,231 - INFO : [main] (ProductDAOImpl.java:141) - Get All traitment Begin ...!
2021-12-05 03:42:15,261 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name=?
2021-12-05 03:42:15,281 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:42:15,282 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:42:15,283 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:42:15,283 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:42:15,286 - INFO : [main] (ProductDAOImpl.java:147) - Get All Successfully ...!
2021-12-05 03:42:37,092 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:42:37,120 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:42:37,124 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:42:37,146 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:42:37,449 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:42:37,452 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:42:37,517 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:42:37,880 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:42:37,880 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:42:37,881 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:42:37,904 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:42:37,904 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:42:37,943 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:42:37,958 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:42:38,022 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:42:38,023 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:42:38,025 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:42:38,028 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:42:38,030 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:42:38,031 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:42:38,034 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:42:38,034 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:42:38,034 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:42:38,036 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:42:38,036 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:42:38,037 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:42:38,039 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:42:38,040 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:42:38,040 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:42:38,042 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:42:38,043 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:42:38,043 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:42:38,047 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:42:38,047 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:42:38,047 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:42:38,050 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:42:38,050 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:42:38,050 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:42:38,053 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:42:38,053 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:42:38,053 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:42:38,056 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:42:38,056 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:42:38,058 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:42:38,059 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:42:38,061 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:42:38,061 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:42:38,063 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:42:38,065 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:42:38,067 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:42:38,067 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:42:38,069 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:42:38,069 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:42:38,088 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:42:38,088 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:42:38,090 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:42:38,090 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:42:38,093 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:42:38,093 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:42:38,095 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:42:38,095 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:42:38,097 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:42:38,098 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:42:38,100 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:42:38,100 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:42:38,105 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:42:38,105 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:42:38,107 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:42:38,107 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:42:38,109 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:42:38,110 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:42:38,111 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:42:38,111 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:42:38,111 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:42:38,113 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:42:38,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:42:38,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:42:38,115 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:42:38,116 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:42:38,117 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:42:38,118 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:42:38,119 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:42:38,119 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:42:38,120 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:42:38,120 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:42:38,122 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:42:38,122 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:42:38,124 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:42:38,124 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:42:38,125 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:42:38,127 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:42:38,127 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:42:38,127 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:42:38,129 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:42:38,129 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:42:38,129 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:42:38,131 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:42:38,132 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:42:38,133 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:42:38,133 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:42:38,133 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:42:38,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:42:38,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:42:38,134 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:42:38,135 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:42:38,136 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:42:38,144 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:42:38,145 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:42:38,145 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:42:38,152 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:42:38,153 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:42:38,158 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:42:38,158 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:42:38,158 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:42:38,160 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:42:38,162 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:42:38,166 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:42:38,166 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:42:38,167 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:42:38,167 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:42:38,167 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:42:38,167 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:42:38,167 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:42:38,168 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:42:38,168 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:42:38,168 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:42:38,190 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:42:38,196 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:42:38,197 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:42:38,197 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:42:38,201 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:42:38,201 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:42:38,760 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:42:38,761 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:42:38,761 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:42:38,774 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:42:38,819 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:42:38,822 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:42:38,836 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:42:39,272 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:42:39,273 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:42:39,274 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:42:39,275 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:42:39,275 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:42:39,277 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:42:39,278 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:42:39,280 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:42:39,281 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:42:39,282 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:42:39,282 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:42:39,283 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:42:39,284 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:42:39,285 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:42:39,286 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:42:39,286 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:42:39,344 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:42:39,402 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:42:39,422 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getAll => from Product
2021-12-05 03:42:39,423 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getByMc => from Product where name like :name
2021-12-05 03:42:39,434 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:42:39,448 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:42:39,451 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:42:39,486 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:42:39,490 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:42:39,492 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:42:39,495 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:42:39,497 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:42:39,505 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:42:39,506 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:42:39,506 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:42:39,506 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:42:39,506 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:42:39,507 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:42:39,508 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:42:39,508 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:42:39,508 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:42:39,508 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:42:39,512 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:42:39,512 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:42:39,512 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:42:39,515 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:42:39,558 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:42:39,560 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:42:39,560 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:42:39,560 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:42:39,560 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:42:39,560 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:42:39,560 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:42:39,561 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:42:39,562 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:42:39,562 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:42:39,562 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:42:39,562 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:42:39,562 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:42:39,562 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4a8355dd
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:42:39,563 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:42:39,564 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:42:39,564 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:42:39,564 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:42:39,564 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:42:39,564 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:42:39,564 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:42:39,636 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:42:39,636 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ebea008, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:42:39,648 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:42:39,655 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:42:39,725 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:42:39,725 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:42:39,795 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:42:39,796 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:42:39,898 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:42:39,898 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:42:39,898 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:42:39,898 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:42:39,899 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:42:39,899 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:42:39,899 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:42:39,934 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c5e07]
2021-12-05 03:42:39,936 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,937 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,937 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,956 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,963 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,966 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:39,967 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:42:39,968 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,968 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,968 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,968 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,969 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,969 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:39,969 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:42:39,970 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,970 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,970 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,970 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,971 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,971 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:39,972 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388526fb]
2021-12-05 03:42:39,972 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,972 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,972 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,973 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,973 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,974 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:39,974 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7803bfd]
2021-12-05 03:42:39,974 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,974 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,975 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,975 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,976 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,977 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:39,977 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531f4093]
2021-12-05 03:42:39,977 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,977 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,978 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,978 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,978 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,981 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:39,982 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436a7db]
2021-12-05 03:42:39,982 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,982 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,983 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,983 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,984 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,984 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:42:39,984 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c660a]
2021-12-05 03:42:39,984 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,985 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,985 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,985 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,985 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,986 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:39,986 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25aca718]
2021-12-05 03:42:39,986 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,986 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,986 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,986 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,987 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,987 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:42:39,987 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afdd473]
2021-12-05 03:42:39,987 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,987 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,987 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,988 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,988 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,988 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:39,988 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7776ab]
2021-12-05 03:42:39,989 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:42:39,989 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:42:39,989 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:42:39,989 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:42:39,990 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:42:39,990 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:40,018 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:40,018 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:42:40,048 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:42:40,053 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 2 named HQL queries
2021-12-05 03:42:40,053 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getAll
2021-12-05 03:42:40,060 - DEBUG : [main] (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13d73fa
2021-12-05 03:42:40,060 - INFO : [main] (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2021-12-05 03:42:40,102 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product
2021-12-05 03:42:40,112 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Product'

2021-12-05 03:42:40,112 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:40,144 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:42:40,162 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:42:40,162 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:42:40,162 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
2021-12-05 03:42:40,175 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:42:40,182 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:42:40,183 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:42:40,183 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}

2021-12-05 03:42:40,184 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:40,192 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product
2021-12-05 03:42:40,192 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:42:40,192 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:40,201 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getByMc
2021-12-05 03:42:40,201 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product where name like :name
2021-12-05 03:42:40,203 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2021-12-05 03:42:40,204 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:40,204 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:42:40,204 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:42:40,208 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-12-05 03:42:40,211 - DEBUG : [main] (DotNode.java:666) - getDataType() : name -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:42:40,212 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.name -> product0_.name
2021-12-05 03:42:40,215 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:42:40,215 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( where ( like ( product0_.name {synthetic-alias} name ) ? ) ) )
2021-12-05 03:42:40,215 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:42:40,216 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:42:40,216 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:42:40,217 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=com.app.models.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@704d6e83}

2021-12-05 03:42:40,217 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:40,217 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product where name like :name
2021-12-05 03:42:40,217 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name like ?
2021-12-05 03:42:40,217 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:42:40,221 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:42:40,224 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ee2b6f9
2021-12-05 03:42:40,228 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: 8f857a3a-714a-4783-aa3a-ad02a139e385 (<unnamed>)
2021-12-05 03:42:40,228 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:42:40,425 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:42:40,491 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:42:40,493 - INFO : [main] (ProductDAOImpl.java:141) - Get All traitment Begin ...!
2021-12-05 03:42:40,518 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name like ?
2021-12-05 03:42:40,531 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 0
2021-12-05 03:42:40,536 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#1]
2021-12-05 03:42:40,548 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 1
2021-12-05 03:42:40,548 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#2]
2021-12-05 03:42:40,549 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 2
2021-12-05 03:42:40,549 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#4]
2021-12-05 03:42:40,549 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 3
2021-12-05 03:42:40,549 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#6]
2021-12-05 03:42:40,552 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#1]
2021-12-05 03:42:40,555 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#1]
2021-12-05 03:42:40,555 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#2]
2021-12-05 03:42:40,556 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#2]
2021-12-05 03:42:40,556 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#4]
2021-12-05 03:42:40,556 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#4]
2021-12-05 03:42:40,556 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#6]
2021-12-05 03:42:40,556 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#6]
2021-12-05 03:42:40,557 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:42:40,558 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:42:40,562 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:42:40,564 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2021-12-05 03:42:40,565 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:42:40,566 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:42:40,566 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=321.2, name=Product Update, id=4}
2021-12-05 03:42:40,567 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=2}
2021-12-05 03:42:40,567 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=1}
2021-12-05 03:42:40,567 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=10.2, name=Product01, id=6}
2021-12-05 03:42:40,573 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:42:40,574 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:42:40,574 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:42:40,577 - INFO : [main] (ProductDAOImpl.java:147) - Get All Successfully ...!
2021-12-05 03:42:43,260 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:43:08,770 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2021-12-05 03:43:19,954 - DEBUG : [main] (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-12-05 03:43:19,979 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:43:19,984 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:43:20,003 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:43:20,209 - INFO : [main] (Version.java:45) - HHH000412: Hibernate Core {5.2.10.Final}
2021-12-05 03:43:20,213 - INFO : [main] (Environment.java:198) - HHH000205: Loaded properties from resource hibernate.properties: {user=root, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, driver=com.mysql.jdbc.Driver, hibernate.bytecode.use_reflection_optimizer=false, pwd=123456}
2021-12-05 03:43:20,248 - DEBUG : [main] (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-12-05 03:43:20,466 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-12-05 03:43:20,467 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-12-05 03:43:20,467 - DEBUG : [main] (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-12-05 03:43:20,482 - DEBUG : [main] (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-12-05 03:43:20,482 - DEBUG : [main] (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2021-12-05 03:43:20,509 - DEBUG : [main] (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-12-05 03:43:20,521 - INFO : [main] (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2021-12-05 03:43:20,558 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:43:20,558 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:43:20,560 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63440df3
2021-12-05 03:43:20,562 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@612fc6eb
2021-12-05 03:43:20,564 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ad1f1f
2021-12-05 03:43:20,565 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@69b0fd6f
2021-12-05 03:43:20,568 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:43:20,568 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:43:20,568 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db7a79b
2021-12-05 03:43:20,570 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:43:20,570 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:43:20,571 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cbd213e
2021-12-05 03:43:20,572 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:43:20,573 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:43:20,573 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553a3d88
2021-12-05 03:43:20,574 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:43:20,575 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:43:20,575 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74a10858
2021-12-05 03:43:20,577 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:43:20,577 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:43:20,578 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13eb8acf
2021-12-05 03:43:20,580 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:43:20,580 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:43:20,580 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22eeefeb
2021-12-05 03:43:20,583 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:43:20,583 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:43:20,583 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12c8a2c0
2021-12-05 03:43:20,586 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:43:20,586 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bbf683
2021-12-05 03:43:20,588 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:43:20,588 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@150c158
2021-12-05 03:43:20,589 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:43:20,589 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:43:20,591 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@706a04ae
2021-12-05 03:43:20,592 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c072e3f
2021-12-05 03:43:20,593 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:43:20,593 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@646007f4
2021-12-05 03:43:20,595 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:43:20,595 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4cf4d528
2021-12-05 03:43:20,612 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:43:20,612 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52525845
2021-12-05 03:43:20,614 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:43:20,614 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35a50a4c
2021-12-05 03:43:20,616 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:43:20,616 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d3af739
2021-12-05 03:43:20,618 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:43:20,618 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a4041cc
2021-12-05 03:43:20,620 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:43:20,620 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4bb4de6a
2021-12-05 03:43:20,622 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:43:20,623 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@aecb35a
2021-12-05 03:43:20,629 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:43:20,629 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69379752
2021-12-05 03:43:20,631 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:43:20,631 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b9e255
2021-12-05 03:43:20,633 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:43:20,633 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f416310
2021-12-05 03:43:20,634 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:43:20,634 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:43:20,635 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60438a68
2021-12-05 03:43:20,636 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dbd940d
2021-12-05 03:43:20,638 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:43:20,638 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:43:20,639 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76b10754
2021-12-05 03:43:20,640 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2df32bf7
2021-12-05 03:43:20,641 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:43:20,642 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58a90037
2021-12-05 03:43:20,643 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:43:20,644 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f490758
2021-12-05 03:43:20,645 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:43:20,645 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@588df31b
2021-12-05 03:43:20,647 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:43:20,648 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e2c9341
2021-12-05 03:43:20,649 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:43:20,650 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32cf48b7
2021-12-05 03:43:20,650 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d6da883
2021-12-05 03:43:20,652 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:43:20,652 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:43:20,652 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@12028586
2021-12-05 03:43:20,654 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:43:20,655 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:43:20,655 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11c20519
2021-12-05 03:43:20,656 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@365c30cc
2021-12-05 03:43:20,657 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@71a794e5
2021-12-05 03:43:20,658 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:43:20,658 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:43:20,659 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@62fdb4a6
2021-12-05 03:43:20,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:43:20,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:43:20,660 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ffcd140
2021-12-05 03:43:20,661 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3444d69d
2021-12-05 03:43:20,662 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@21a947fe
2021-12-05 03:43:20,667 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:43:20,667 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59717824
2021-12-05 03:43:20,668 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d9bc04
2021-12-05 03:43:20,676 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:43:20,676 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2021-12-05 03:43:20,680 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:43:20,681 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53e23f
2021-12-05 03:43:20,681 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9a3314
2021-12-05 03:43:20,682 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@176d53b2
2021-12-05 03:43:20,685 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2021-12-05 03:43:20,690 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:43:20,690 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f77e91b
2021-12-05 03:43:20,691 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2357d90a
2021-12-05 03:43:20,691 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6328d34a
2021-12-05 03:43:20,691 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@145eaa29
2021-12-05 03:43:20,692 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2021-12-05 03:43:20,692 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8b96fde
2021-12-05 03:43:20,692 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2021-12-05 03:43:20,692 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c40b76e
2021-12-05 03:43:20,693 - DEBUG : [main] (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ea6137
2021-12-05 03:43:20,713 - WARN : [main] (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-12-05 03:43:20,721 - INFO : [main] (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8]
2021-12-05 03:43:20,722 - INFO : [main] (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=123456}
2021-12-05 03:43:20,722 - INFO : [main] (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2021-12-05 03:43:20,728 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2021-12-05 03:43:20,728 - INFO : [main] (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-12-05 03:43:21,273 - DEBUG : [main] (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 8.0.26
      major : 8
      minor : 0
2021-12-05 03:43:21,274 - DEBUG : [main] (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2021-12-05 03:43:21,274 - DEBUG : [main] (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2021-12-05 03:43:21,290 - INFO : [main] (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2021-12-05 03:43:21,333 - DEBUG : [main] (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2021-12-05 03:43:21,338 - DEBUG : [main] (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-12-05 03:43:21,354 - INFO : [main] (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2021-12-05 03:43:21,745 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-12-05 03:43:21,746 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-12-05 03:43:21,748 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:43:21,748 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-12-05 03:43:21,749 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-12-05 03:43:21,750 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-12-05 03:43:21,751 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-12-05 03:43:21,753 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:43:21,754 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-12-05 03:43:21,755 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-12-05 03:43:21,756 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-12-05 03:43:21,757 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-12-05 03:43:21,757 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:43:21,759 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-12-05 03:43:21,760 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2021-12-05 03:43:21,760 - DEBUG : [main] (DefaultIdentifierGeneratorFactory.java:84) -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-12-05 03:43:21,821 - DEBUG : [main] (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=DbProducts}, physicalName=Name{catalog=null, schema=DbProducts}]
2021-12-05 03:43:21,865 - DEBUG : [main] (AnnotationBinder.java:511) - Binding entity from annotated class: com.app.models.Product
2021-12-05 03:43:21,885 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getAll => from Product
2021-12-05 03:43:21,885 - DEBUG : [main] (QueryBinder.java:80) - Binding named query: getByMc => from Product where name like :name
2021-12-05 03:43:21,897 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-12-05 03:43:21,909 - DEBUG : [main] (EntityBinder.java:419) - Import with entity name Product
2021-12-05 03:43:21,915 - DEBUG : [main] (EntityBinder.java:695) - Bind entity com.app.models.Product on table product
2021-12-05 03:43:21,962 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-12-05 03:43:21,966 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2021-12-05 03:43:21,970 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:id]
2021-12-05 03:43:21,972 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for id
2021-12-05 03:43:21,975 - DEBUG : [main] (PropertyBinder.java:265) - Building property id
2021-12-05 03:43:21,982 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-12-05 03:43:21,983 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property name with lazy=false
2021-12-05 03:43:21,983 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:name]
2021-12-05 03:43:21,984 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for name
2021-12-05 03:43:21,984 - DEBUG : [main] (PropertyBinder.java:265) - Building property name
2021-12-05 03:43:21,985 - DEBUG : [main] (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DbProducts.product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2021-12-05 03:43:21,986 - DEBUG : [main] (PropertyBinder.java:174) - MetadataSourceProcessor property price with lazy=false
2021-12-05 03:43:21,986 - DEBUG : [main] (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.app.models.Product:price]
2021-12-05 03:43:21,986 - DEBUG : [main] (SimpleValueBinder.java:411) - building SimpleValue for price
2021-12-05 03:43:21,987 - DEBUG : [main] (PropertyBinder.java:265) - Building property price
2021-12-05 03:43:21,989 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2021-12-05 03:43:21,989 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for name
2021-12-05 03:43:21,989 - DEBUG : [main] (SimpleValueBinder.java:456) - Starting fillSimpleValue for price
2021-12-05 03:43:21,993 - DEBUG : [main] (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [product]
2021-12-05 03:43:22,082 - DEBUG : [main] (SessionFactoryImpl.java:199) - Building session factory
2021-12-05 03:43:22,084 - DEBUG : [main] (Settings.java:69) - SessionFactory name : null
2021-12-05 03:43:22,084 - DEBUG : [main] (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2021-12-05 03:43:22,085 - DEBUG : [main] (Settings.java:71) - Automatic session close at end of transaction: disabled
2021-12-05 03:43:22,085 - DEBUG : [main] (Settings.java:73) - Statistics: disabled
2021-12-05 03:43:22,085 - DEBUG : [main] (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2021-12-05 03:43:22,085 - DEBUG : [main] (Settings.java:76) - Default entity-mode: pojo
2021-12-05 03:43:22,085 - DEBUG : [main] (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-12-05 03:43:22,085 - DEBUG : [main] (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2021-12-05 03:43:22,086 - DEBUG : [main] (Settings.java:80) - Using BatchFetchStyle : LEGACY
2021-12-05 03:43:22,086 - DEBUG : [main] (Settings.java:81) - Default batch fetch size: -1
2021-12-05 03:43:22,086 - DEBUG : [main] (Settings.java:82) - Maximum outer join fetch depth: 2
2021-12-05 03:43:22,087 - DEBUG : [main] (Settings.java:83) - Default null ordering: NONE
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:84) - Order SQL updates by primary key: disabled
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:85) - Order SQL inserts for batching: disabled
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:87) - multi-tenancy strategy : NONE
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:89) - JTA Track by Thread: enabled
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:91) - Query language substitutions: {}
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:92) - JPA query language strict compliance: disabled
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:93) - Named query checking : enabled
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:95) - Second-level cache: enabled
2021-12-05 03:43:22,088 - DEBUG : [main] (Settings.java:96) - Second-level query cache: disabled
2021-12-05 03:43:22,089 - DEBUG : [main] (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4a8355dd
2021-12-05 03:43:22,089 - DEBUG : [main] (Settings.java:98) - Second-level cache region prefix: null
2021-12-05 03:43:22,089 - DEBUG : [main] (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2021-12-05 03:43:22,089 - DEBUG : [main] (Settings.java:100) - Structured second-level cache entries: disabled
2021-12-05 03:43:22,089 - DEBUG : [main] (Settings.java:101) - Second-level cache direct-reference entries: disabled
2021-12-05 03:43:22,089 - DEBUG : [main] (Settings.java:102) - Automatic eviction of collection cache: disabled
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:104) - JDBC batch size: 15
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:105) - JDBC batch updates for versioned data: enabled
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:106) - Scrollable result sets: enabled
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:107) - Wrap result sets: disabled
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:109) - JDBC result set fetch size: null
2021-12-05 03:43:22,090 - DEBUG : [main] (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2021-12-05 03:43:22,093 - DEBUG : [main] (Settings.java:111) - Generate SQL with comments: disabled
2021-12-05 03:43:22,208 - DEBUG : [main] (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2021-12-05 03:43:22,209 - DEBUG : [main] (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review\bin;C:\Users\HP\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\HP\.m2\repository\hibernate1\antlr-2.7.7.jar;C:\Users\HP\.m2\repository\hibernate1\classmate-1.3.0.jar;C:\Users\HP\.m2\repository\hibernate1\dom4j-1.6.1.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-core-5.2.10.Final.jar;C:\Users\HP\.m2\repository\hibernate1\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jandex-2.0.3.Final.jar;C:\Users\HP\.m2\repository\hibernate1\javassist-3.20.0-GA.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-logging-3.3.0.Final.jar;C:\Users\HP\.m2\repository\hibernate1\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\HP\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/London, os.name=Windows 10, java.vm.specification.version=1.8, user.country=GB, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_301\bin, sun.java.command=com.app.main.Main, sun.cpu.endian=little, user.home=C:\Users\HP, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_301, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, driver=com.mysql.jdbc.Driver, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, pwd=123456, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_301\lib\resources.jar;C:\Program Files\Java\jre1.8.0_301\lib\rt.jar;C:\Program Files\Java\jre1.8.0_301\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_301\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_301\lib\jce.jar;C:\Program Files\Java\jre1.8.0_301\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_301\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_301\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=HP, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_301\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\HP\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\HP\eclipse Java Lamnaouar\hibernate-crud-review, os.arch=amd64, hibernate.default_schema=DbProducts, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, url=jdbc:mysql://localhost:3306/DbProducts?characterEncoding=utf8, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ebea008, java.library.path=C:\Program Files\Java\jre1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_301/bin/server;C:/Program Files/Java/jre1.8.0_301/bin;C:/Program Files/Java/jre1.8.0_301/lib/amd64;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Calibre2\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Local\GitHubDesktop\bin;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\.dotnet\tools;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;;C:\Users\HP\Desktop\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_301\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0, user=root}
2021-12-05 03:43:22,221 - DEBUG : [main] (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2021-12-05 03:43:22,228 - DEBUG : [main] (SessionFactoryImpl.java:294) - Instantiated session factory
2021-12-05 03:43:22,286 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:43:22,286 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:43:22,352 - DEBUG : [main] (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.app.models.Product] is safe
2021-12-05 03:43:22,352 - DEBUG : [main] (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.app.models.Product
2021-12-05 03:43:22,444 - DEBUG : [main] (AbstractEntityPersister.java:3598) - Static SQL for entity: com.app.models.Product
2021-12-05 03:43:22,444 - DEBUG : [main] (AbstractEntityPersister.java:3603) -  Version select: select id from product where id =?
2021-12-05 03:43:22,444 - DEBUG : [main] (AbstractEntityPersister.java:3606) -  Snapshot select: select product_.id, product_.name as name2_0_, product_.price as price3_0_ from product product_ where product_.id=?
2021-12-05 03:43:22,444 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Insert 0: insert into product (name, price, id) values (?, ?, ?)
2021-12-05 03:43:22,444 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Update 0: update product set name=?, price=? where id=?
2021-12-05 03:43:22,444 - DEBUG : [main] (DelegatingBasicLogger.java:394) -  Delete 0: delete from product where id=?
2021-12-05 03:43:22,444 - DEBUG : [main] (AbstractEntityPersister.java:3614) -  Identity insert: insert into product (name, price) values (?, ?)
2021-12-05 03:43:22,479 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2c5e07]
2021-12-05 03:43:22,481 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,481 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,481 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,502 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,508 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,511 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [NONE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:43:22,511 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@561868a0]
2021-12-05 03:43:22,511 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,512 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,512 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,512 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,513 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,513 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:43:22,514 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6138e79a]
2021-12-05 03:43:22,514 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,514 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,514 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,515 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,515 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,516 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:43:22,516 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388526fb]
2021-12-05 03:43:22,516 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,517 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,517 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,517 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,518 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,518 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_NOWAIT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:43:22,519 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7803bfd]
2021-12-05 03:43:22,519 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,519 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,519 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,519 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,520 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,520 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [UPGRADE_SKIPLOCKED]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:43:22,520 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531f4093]
2021-12-05 03:43:22,520 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,521 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,521 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,521 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,522 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,522 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [FORCE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:43:22,522 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436a7db]
2021-12-05 03:43:22,523 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,523 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,523 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,523 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,524 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,524 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_READ]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? lock in share mode
2021-12-05 03:43:22,525 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c660a]
2021-12-05 03:43:22,525 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,525 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,525 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,526 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,526 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,527 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_WRITE]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:43:22,527 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25aca718]
2021-12-05 03:43:22,527 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,527 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,527 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,528 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,528 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,528 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=? for update
2021-12-05 03:43:22,529 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afdd473]
2021-12-05 03:43:22,529 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,529 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,529 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,529 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,530 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,530 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:43:22,530 - DEBUG : [main] (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7776ab]
2021-12-05 03:43:22,530 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : name
2021-12-05 03:43:22,530 - DEBUG : [main] (MetamodelGraphWalker.java:137) - Visiting attribute path : price
2021-12-05 03:43:22,531 - DEBUG : [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2021-12-05 03:43:22,531 - DEBUG : [main] (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2021-12-05 03:43:22,532 - DEBUG : [main] (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.app.models.Product)
    - Returns
       - EntityReturnImpl(entity=com.app.models.Product, querySpaceUid=<gen:0>, path=com.app.models.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.app.models.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-12-05 03:43:22,532 - DEBUG : [main] (EntityLoader.java:115) - Static select for entity com.app.models.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:43:22,554 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:43:22,555 - DEBUG : [main] (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.app.models.Product: select product0_.id as id1_0_0_, product0_.name as name2_0_0_, product0_.price as price3_0_0_ from product product0_ where product0_.id=?
2021-12-05 03:43:22,584 - DEBUG : [main] (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2021-12-05 03:43:22,592 - DEBUG : [main] (NamedQueryRepository.java:151) - Checking 2 named HQL queries
2021-12-05 03:43:22,593 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getAll
2021-12-05 03:43:22,600 - DEBUG : [main] (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13d73fa
2021-12-05 03:43:22,600 - INFO : [main] (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2021-12-05 03:43:22,634 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product
2021-12-05 03:43:22,643 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'app'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Product'

2021-12-05 03:43:22,643 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:43:22,682 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:43:22,702 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:43:22,703 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:43:22,703 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) )
2021-12-05 03:43:22,714 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:43:22,722 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:43:22,723 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:43:22,723 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}

2021-12-05 03:43:22,724 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:43:22,734 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product
2021-12-05 03:43:22,734 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_
2021-12-05 03:43:22,734 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:43:22,742 - DEBUG : [main] (NamedQueryRepository.java:155) - Checking named query: getByMc
2021-12-05 03:43:22,742 - DEBUG : [main] (QueryTranslatorImpl.java:282) - parse() - HQL: from com.app.models.Product where name like :name
2021-12-05 03:43:22,745 - DEBUG : [main] (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'app'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Product'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2021-12-05 03:43:22,746 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:43:22,746 - DEBUG : [main] (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2021-12-05 03:43:22,747 - DEBUG : [main] (FromElement.java:147) - FromClause{level=1} : com.app.models.Product (<no alias>) -> product0_
2021-12-05 03:43:22,749 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-12-05 03:43:22,751 - DEBUG : [main] (DotNode.java:666) - getDataType() : name -> org.hibernate.type.StringType@704d6e83
2021-12-05 03:43:22,752 - DEBUG : [main] (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.name -> product0_.name
2021-12-05 03:43:22,754 - DEBUG : [main] (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2021-12-05 03:43:22,754 - DEBUG : [main] (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} product product0_ ) ( where ( like ( product0_.name {synthetic-alias} name ) ? ) ) )
2021-12-05 03:43:22,754 - DEBUG : [main] (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2021-12-05 03:43:22,755 - DEBUG : [main] (JoinProcessor.java:187) - Using FROM fragment [product product0_]
2021-12-05 03:43:22,755 - DEBUG : [main] (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2021-12-05 03:43:22,756 - DEBUG : [main] (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'product0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.name as name2_0_, product0_.price as price3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=com.app.models.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=product0_,className=com.app.models.Product,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@704d6e83}

2021-12-05 03:43:22,757 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:43:22,758 - DEBUG : [main] (QueryTranslatorImpl.java:251) - HQL: from com.app.models.Product where name like :name
2021-12-05 03:43:22,758 - DEBUG : [main] (QueryTranslatorImpl.java:252) - SQL: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name like ?
2021-12-05 03:43:22,759 - DEBUG : [main] (ErrorCounter.java:95) - throwQueryException() : no errors
2021-12-05 03:43:22,763 - DEBUG : [main] (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2021-12-05 03:43:22,765 - DEBUG : [main] (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ee2b6f9
2021-12-05 03:43:22,768 - DEBUG : [main] (SessionFactoryRegistry.java:74) - Registering SessionFactory: f3c61672-95a3-430d-ad97-8165d8da436f (<unnamed>)
2021-12-05 03:43:22,768 - DEBUG : [main] (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2021-12-05 03:43:22,873 - DEBUG : [main] (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2021-12-05 03:43:22,941 - DEBUG : [main] (TransactionImpl.java:55) - begin
2021-12-05 03:43:22,943 - INFO : [main] (ProductDAOImpl.java:141) - Get All traitment Begin ...!
2021-12-05 03:43:22,963 - DEBUG : [main] (SqlStatementLogger.java:92) - select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.name like ?
2021-12-05 03:43:22,976 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 0
2021-12-05 03:43:22,979 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#1]
2021-12-05 03:43:22,989 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 1
2021-12-05 03:43:22,989 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#2]
2021-12-05 03:43:22,989 - DEBUG : [main] (DelegatingBasicLogger.java:384) - Result set row: 2
2021-12-05 03:43:22,990 - DEBUG : [main] (Loader.java:1527) - Result row: EntityKey[com.app.models.Product#6]
2021-12-05 03:43:22,992 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#1]
2021-12-05 03:43:22,996 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#1]
2021-12-05 03:43:22,996 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#2]
2021-12-05 03:43:22,996 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#2]
2021-12-05 03:43:22,996 - DEBUG : [main] (TwoPhaseLoad.java:141) - Resolving associations for [com.app.models.Product#6]
2021-12-05 03:43:22,997 - DEBUG : [main] (TwoPhaseLoad.java:281) - Done materializing entity [com.app.models.Product#6]
2021-12-05 03:43:22,998 - DEBUG : [main] (TransactionImpl.java:66) - committing
2021-12-05 03:43:22,999 - DEBUG : [main] (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2021-12-05 03:43:23,003 - DEBUG : [main] (AbstractFlushingEventListener.java:174) - Dirty checking collections
2021-12-05 03:43:23,006 - DEBUG : [main] (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-12-05 03:43:23,006 - DEBUG : [main] (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-12-05 03:43:23,007 - DEBUG : [main] (EntityPrinter.java:102) - Listing entities:
2021-12-05 03:43:23,008 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=2}
2021-12-05 03:43:23,008 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=123.2, name=product1, id=1}
2021-12-05 03:43:23,008 - DEBUG : [main] (EntityPrinter.java:109) - com.app.models.Product{price=10.2, name=Product01, id=6}
2021-12-05 03:43:23,010 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:43:23,010 - DEBUG : [main] (SynchronizationRegistryStandardImpl.java:103) - Clearing local Synchronizations
2021-12-05 03:43:23,010 - DEBUG : [main] (LogicalConnectionManagedImpl.java:170) - Initiating JDBC connection release from afterTransaction
2021-12-05 03:43:23,012 - INFO : [main] (ProductDAOImpl.java:147) - Get All Successfully ...!
2021-12-05 03:43:51,277 - DEBUG : [pool-1-thread-1] (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
